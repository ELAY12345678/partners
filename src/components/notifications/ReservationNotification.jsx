import React, { useEffect, useState } from 'react';
import moment from 'moment';
import { Row, Col, Badge, Typography, message, Tooltip, Button, Space, } from 'antd';
import { IoTicketOutline } from 'react-icons/io5';
import { getService } from '../../services';
import AsyncButton from '../asyncButton';

import MinuteProgress from '../minuteProgress';
import { useMedia } from 'react-use';

const STATUS_RESERVATION = {
    claimed: "claimed",
    notClaimed: "notClaimed",
    acquired: "acquired",
    notApproved: "notApproved",
    canceledByEstablishment: "canceledByEstablishment"
};

const CheackIcon = () => (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M10.0013 18.2944C14.6037 18.2944 18.3346 14.5714 18.3346 9.97876C18.3346 5.38614 14.6037 1.66309 10.0013 1.66309C5.39893 1.66309 1.66797 5.38614 1.66797 9.97876C1.66797 14.5714 5.39893 18.2944 10.0013 18.2944Z" fill="#00B84E" stroke="#00B84E" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round" />
        <path d="M14.168 7.48401L9.01172 12.6293L6.66797 10.2905" fill="#00B84E" />
        <path d="M14.168 7.48401L9.01172 12.6293L6.66797 10.2905" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
);

const CancelIcon = () => (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_623_16143)">
            <rect width="20" height="19.9576" fill="white" />
            <path d="M10.0013 18.2944C14.6037 18.2944 18.3346 14.5714 18.3346 9.97876C18.3346 5.38614 14.6037 1.66309 10.0013 1.66309C5.39893 1.66309 1.66797 5.38614 1.66797 9.97876C1.66797 14.5714 5.39893 18.2944 10.0013 18.2944Z" fill="#D62626" stroke="#D62626" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M12.5 7.48413L7.5 12.4735" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            <path d="M7.5 7.48413L12.5 12.4735" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </g>
        <defs>
            <clipPath id="clip0_623_16143">
                <rect width="20" height="19.9576" fill="white" />
            </clipPath>
        </defs>
    </svg>

);

const UserIcon = () => (
    <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path opacity="0.2" d="M16.5 9.00958C16.5011 10.0624 16.2804 11.1036 15.8524 12.0653C15.4243 13.027 14.7984 13.8875 14.0156 14.5907C13.545 13.6641 12.8273 12.886 11.942 12.3426C11.0568 11.7992 10.0385 11.5117 9 11.512C9.61807 11.512 10.2223 11.3285 10.7362 10.9848C11.2501 10.6411 11.6506 10.1526 11.8871 9.58101C12.1236 9.00945 12.1855 8.38052 12.065 7.77375C11.9444 7.16699 11.6467 6.60963 11.2097 6.17218C10.7727 5.73473 10.2159 5.43681 9.60966 5.31612C9.00347 5.19543 8.37514 5.25737 7.80412 5.49412C7.2331 5.73087 6.74504 6.13179 6.40166 6.64618C6.05828 7.16057 5.875 7.76534 5.875 8.38399C5.875 9.21358 6.20424 10.0092 6.79029 10.5958C7.37634 11.1824 8.1712 11.512 9 11.512C7.96153 11.5117 6.94325 11.7992 6.05798 12.3426C5.17271 12.886 4.45501 13.6641 3.98438 14.5907C3.05489 13.7538 2.34913 12.6977 1.9313 11.5183C1.51346 10.3389 1.39679 9.07362 1.5919 7.83759C1.78702 6.60156 2.28772 5.43396 3.04848 4.44095C3.80924 3.44795 4.80592 2.66105 5.94789 2.15181C7.08987 1.64257 8.34091 1.42714 9.58724 1.52512C10.8336 1.6231 12.0357 2.03138 13.0842 2.71283C14.1328 3.39428 14.9945 4.32727 15.5911 5.42698C16.1876 6.52669 16.5001 7.75822 16.5 9.00958Z" fill="#F0EFEF" />
        <path d="M9 0.876831C7.39303 0.876831 5.82214 1.35381 4.486 2.24744C3.14985 3.14108 2.10844 4.41124 1.49348 5.8973C0.87852 7.38336 0.717618 9.01858 1.03112 10.5962C1.34463 12.1738 2.11846 13.6229 3.25476 14.7603C4.39106 15.8977 5.8388 16.6722 7.4149 16.986C8.99099 17.2998 10.6247 17.1388 12.1093 16.5232C13.594 15.9077 14.8629 14.8653 15.7557 13.5279C16.6485 12.1904 17.125 10.6181 17.125 9.00956C17.1227 6.85332 16.266 4.78606 14.7427 3.26137C13.2195 1.73668 11.1542 0.879108 9 0.876831ZM4.7875 14.4444C5.23964 13.7366 5.86251 13.1541 6.59869 12.7507C7.33488 12.3472 8.16069 12.1357 9 12.1357C9.83932 12.1357 10.6651 12.3472 11.4013 12.7507C12.1375 13.1541 12.7604 13.7366 13.2125 14.4444C12.0081 15.382 10.5258 15.891 9 15.891C7.4742 15.891 5.99193 15.382 4.7875 14.4444ZM6.5 8.38397C6.5 7.88904 6.64663 7.40523 6.92133 6.99372C7.19603 6.5822 7.58648 6.26147 8.04329 6.07207C8.50011 5.88267 9.00278 5.83311 9.48773 5.92967C9.97268 6.02622 10.4181 6.26455 10.7678 6.61452C11.1174 6.96448 11.3555 7.41036 11.452 7.89578C11.5484 8.38119 11.4989 8.88433 11.3097 9.34158C11.1205 9.79883 10.8001 10.1897 10.3889 10.4646C9.97781 10.7396 9.49446 10.8863 9 10.8863C8.33696 10.8863 7.70108 10.6227 7.23224 10.1534C6.7634 9.68413 6.5 9.04764 6.5 8.38397ZM14.1375 13.5772C13.4404 12.5661 12.4603 11.7839 11.3203 11.329C11.9327 10.8462 12.3795 10.1844 12.5987 9.43566C12.8179 8.68692 12.7985 7.88841 12.5433 7.15119C12.2881 6.41397 11.8097 5.77468 11.1746 5.32222C10.5396 4.86976 9.77949 4.62663 9 4.62663C8.22052 4.62663 7.4604 4.86976 6.82536 5.32222C6.19033 5.77468 5.71193 6.41397 5.45671 7.15119C5.20149 7.88841 5.18212 8.68692 5.40131 9.43566C5.62049 10.1844 6.06734 10.8462 6.67969 11.329C5.53971 11.7839 4.55956 12.5661 3.8625 13.5772C2.9817 12.5857 2.406 11.3606 2.20473 10.0492C2.00346 8.73786 2.1852 7.39622 2.72806 6.18586C3.27093 4.9755 4.15178 3.94801 5.26454 3.22714C6.3773 2.50627 7.67452 2.12274 9 2.12274C10.3255 2.12274 11.6227 2.50627 12.7355 3.22714C13.8482 3.94801 14.7291 4.9755 15.2719 6.18586C15.8148 7.39622 15.9966 8.73786 15.7953 10.0492C15.594 11.3606 15.0183 12.5857 14.1375 13.5772Z" fill="#202020" />
    </svg>

);

const CalendarIcon = () => (<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect width="20" height="20" fill="white" />
    <path d="M15.8333 3.33337H4.16667C3.24619 3.33337 2.5 4.07957 2.5 5.00004V16.6667C2.5 17.5872 3.24619 18.3334 4.16667 18.3334H15.8333C16.7538 18.3334 17.5 17.5872 17.5 16.6667V5.00004C17.5 4.07957 16.7538 3.33337 15.8333 3.33337Z" stroke="#202020" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M13.332 1.66663V4.99996" stroke="#202020" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M6.66797 1.66663V4.99996" stroke="#202020" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M2.5 8.33337H17.5" stroke="#202020" stroke-linecap="round" stroke-linejoin="round" />
</svg>
);

const ComunityIcon = () => (
    <svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="20.019" fill="white" />
        <path d="M3.75 3.75354C3.75 3.08987 4.01339 2.45338 4.48223 1.98409C4.95107 1.5148 5.58696 1.25116 6.25 1.25116C6.91304 1.25116 7.54893 1.5148 8.01777 1.98409C8.48661 2.45338 8.75 3.08987 8.75 3.75354C8.75 4.41721 8.48661 5.0537 8.01777 5.52299C7.54893 5.99227 6.91304 6.25592 6.25 6.25592C5.58696 6.25592 4.95107 5.99227 4.48223 5.52299C4.01339 5.0537 3.75 4.41721 3.75 3.75354ZM6.25 2.50235C5.91848 2.50235 5.60054 2.63417 5.36612 2.86881C5.1317 3.10346 5 3.4217 5 3.75354C5 4.08537 5.1317 4.40362 5.36612 4.63826C5.60054 4.87291 5.91848 5.00473 6.25 5.00473C6.58152 5.00473 6.89946 4.87291 7.13388 4.63826C7.3683 4.40362 7.5 4.08537 7.5 3.75354C7.5 3.4217 7.3683 3.10346 7.13388 2.86881C6.89946 2.63417 6.58152 2.50235 6.25 2.50235ZM12.2238 5.73542C11.9619 5.53547 11.742 5.2857 11.5769 5.00045C11.4118 4.7152 11.3045 4.40009 11.2614 4.07324C11.2183 3.74639 11.2402 3.41424 11.3257 3.09586C11.4113 2.77749 11.5588 2.47918 11.7599 2.21806C11.961 1.95695 12.2117 1.73818 12.4975 1.57433C12.7833 1.41048 13.0986 1.30478 13.4254 1.2633C13.7521 1.22181 14.0839 1.24537 14.4015 1.33261C14.7191 1.41985 15.0164 1.56906 15.2762 1.77166C15.7879 2.1813 16.1184 2.7756 16.1967 3.42669C16.275 4.07778 16.0948 4.73361 15.6949 5.25308C15.295 5.77255 14.7074 6.11414 14.0585 6.20435C13.4095 6.29455 12.7512 6.12617 12.225 5.73542H12.2238ZM13.75 2.50235C13.4185 2.50235 13.1005 2.63417 12.8661 2.86881C12.6317 3.10346 12.5 3.4217 12.5 3.75354C12.5 4.08537 12.6317 4.40362 12.8661 4.63826C13.1005 4.87291 13.4185 5.00473 13.75 5.00473C14.0815 5.00473 14.3995 4.87291 14.6339 4.63826C14.8683 4.40362 15 4.08537 15 3.75354C15 3.4217 14.8683 3.10346 14.6339 2.86881C14.3995 2.63417 14.0815 2.50235 13.75 2.50235ZM3.125 7.50711H6.4625C6.325 7.89873 6.25 8.32038 6.25 8.7583H3.125C2.95924 8.7583 2.80027 8.8242 2.68306 8.94153C2.56585 9.05885 2.5 9.21797 2.5 9.38389C2.5 10.4061 2.90625 11.1643 3.5475 11.6798C3.8425 11.9175 4.19625 12.109 4.59625 12.2491C4.30251 12.5616 4.07615 12.9313 3.93125 13.3351C3.51167 13.1664 3.11881 12.9376 2.765 12.6557C1.825 11.8988 1.25 10.7802 1.25 9.38389C1.25 8.88614 1.44754 8.40877 1.79917 8.0568C2.15081 7.70484 2.62772 7.50711 3.125 7.50711ZM7.835 7.50711C7.50348 8.08218 7.41377 8.76552 7.5856 9.4068C7.75743 10.0481 8.17672 10.5948 8.75125 10.9266C9.32578 11.2584 10.0085 11.3482 10.6491 11.1762C11.2898 11.0043 11.836 10.5846 12.1675 10.0095C12.499 9.43441 12.5887 8.75107 12.4169 8.10979C12.2451 7.46851 11.8258 6.92182 11.2513 6.58998C10.6767 6.25815 9.99403 6.16835 9.35336 6.34034C8.71269 6.51234 8.16652 6.93203 7.835 7.50711ZM9.72 7.53839C9.90315 7.49697 10.0932 7.49727 10.2763 7.53924C10.4593 7.58121 10.6306 7.6638 10.7774 7.7809C10.9243 7.898 11.043 8.04662 11.1248 8.21579C11.2066 8.38496 11.2494 8.57035 11.25 8.7583C11.2499 8.99371 11.1835 9.22432 11.0583 9.42363C10.9331 9.62294 10.7543 9.78287 10.5424 9.88502C10.3305 9.98718 10.0942 10.0274 9.86043 10.0011C9.62671 9.97486 9.40514 9.88311 9.22118 9.73643C9.03722 9.58975 8.89833 9.3941 8.82047 9.17196C8.74262 8.94982 8.72896 8.7102 8.78105 8.48063C8.83315 8.25106 8.94889 8.04086 9.11499 7.87419C9.28108 7.70751 9.49078 7.59112 9.72 7.53839ZM16.4525 11.6798C16.1575 11.9175 15.8038 12.109 15.4038 12.2491C15.697 12.5617 15.923 12.9314 16.0675 13.3351C16.4925 13.1612 16.8862 12.9348 17.235 12.6557C18.175 11.8988 18.75 10.7802 18.75 9.38389C18.75 8.88614 18.5525 8.40877 18.2008 8.0568C17.8492 7.70484 17.3723 7.50711 16.875 7.50711H13.5375C13.675 7.89873 13.75 8.32038 13.75 8.7583H16.875C17.0408 8.7583 17.1997 8.8242 17.3169 8.94153C17.4342 9.05885 17.5 9.21797 17.5 9.38389C17.5 10.4061 17.0938 11.1643 16.4525 11.6798ZM13.125 12.5119C13.6223 12.5119 14.0992 12.7096 14.4508 13.0616C14.8025 13.4135 15 13.8909 15 14.3886C15 15.785 14.4262 16.9035 13.485 17.6605C12.5588 18.405 11.3162 18.7678 10 18.7678C8.68375 18.7678 7.44125 18.405 6.515 17.6605C5.575 16.9035 5 15.785 5 14.3886C4.99934 14.142 5.04739 13.8977 5.14138 13.6697C5.23538 13.4417 5.37346 13.2345 5.5477 13.0601C5.72194 12.8857 5.92891 12.7475 6.15669 12.6534C6.38447 12.5593 6.62859 12.5112 6.875 12.5119H13.125ZM13.125 13.7631H6.875C6.70924 13.7631 6.55027 13.829 6.43306 13.9463C6.31585 14.0636 6.25 14.2227 6.25 14.3886C6.25 15.4109 6.65625 16.1691 7.2975 16.6846C7.955 17.2126 8.9 17.5166 10 17.5166C11.1 17.5166 12.045 17.2126 12.7025 16.6846C13.3438 16.1691 13.75 15.4109 13.75 14.3886C13.75 14.2227 13.6842 14.0636 13.5669 13.9463C13.4497 13.829 13.2908 13.7631 13.125 13.7631Z" fill="black" />
    </svg>

);

const DiscountIcon = () => (
    <svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="20.019" fill="white" />
        <path d="M18.5822 7.81037C18.2229 7.54382 17.9167 7.2123 17.6794 6.83298C17.5686 6.37618 17.5458 5.90246 17.6121 5.43712C17.7074 5.00537 17.7099 4.55833 17.6196 4.12552C17.5293 3.6927 17.3482 3.28398 17.0883 2.92633C16.7319 2.66727 16.3248 2.48633 15.8936 2.39531C15.4625 2.30429 15.017 2.30525 14.5863 2.39813C14.1216 2.46766 13.6479 2.44829 13.1904 2.34106C12.8096 2.10236 12.477 1.79412 12.2101 1.43244C11.9671 1.05046 11.6451 0.724965 11.2658 0.477878C10.8864 0.23079 10.4586 0.0678405 10.011 0C9.56415 0.0684317 9.13713 0.231657 8.75859 0.478719C8.38005 0.725782 8.05874 1.05096 7.81623 1.43244C7.54952 1.79163 7.21803 2.09781 6.83883 2.33521C6.38203 2.44603 5.90831 2.46887 5.44297 2.40252C5.01033 2.3064 4.56219 2.30339 4.1283 2.3937C3.69441 2.48401 3.28469 2.66557 2.92633 2.92633C2.66677 3.28253 2.48541 3.68956 2.39413 4.12074C2.30285 4.55192 2.30372 4.99752 2.39666 5.42834C2.46302 5.89368 2.44018 6.3674 2.32936 6.8242C2.09183 7.20418 1.78511 7.53621 1.42512 7.80306C1.04342 8.04767 0.718665 8.37136 0.472807 8.75226C0.22695 9.13317 0.0657156 9.56241 0 10.011C0.0683403 10.4578 0.231528 10.8849 0.478599 11.2634C0.72567 11.642 1.0509 11.9633 1.43244 12.2057C1.79176 12.4723 2.09797 12.8038 2.33521 13.1831C2.44618 13.6404 2.46902 14.1146 2.40252 14.5804C2.30769 15.0117 2.30535 15.4582 2.39564 15.8905C2.48593 16.3228 2.6668 16.731 2.92633 17.0883C3.28264 17.3476 3.68972 17.5287 4.1209 17.6197C4.55208 17.7108 4.99762 17.7097 5.42834 17.6165C5.89369 17.5503 6.36738 17.5732 6.8242 17.6838C7.20403 17.9209 7.53604 18.2271 7.80306 18.5866C8.04543 18.9682 8.3667 19.2935 8.74527 19.5405C9.12383 19.7876 9.55092 19.9508 9.99781 20.019C10.4447 19.9508 10.8718 19.7876 11.2503 19.5405C11.6289 19.2935 11.9502 18.9682 12.1926 18.5866C12.4593 18.2274 12.7908 17.9212 13.1699 17.6838C13.6267 17.573 14.1005 17.5502 14.5658 17.6165C14.9966 17.7098 15.4423 17.7109 15.8735 17.6196C16.3048 17.5283 16.7118 17.3467 17.0678 17.0868C17.3272 16.7306 17.5085 16.3235 17.5997 15.8924C17.691 15.4612 17.6902 15.0157 17.5975 14.5848C17.531 14.119 17.5538 13.6448 17.6648 13.1875C17.902 12.8082 18.2082 12.4767 18.5676 12.2101C18.9493 11.9679 19.2747 11.6467 19.5218 11.2681C19.7689 10.8895 19.9319 10.4623 20 10.0154C19.9351 9.56782 19.775 9.13939 19.5304 8.75901C19.2858 8.37863 18.9625 8.05514 18.5822 7.81037ZM17.7643 11.2664C17.2498 11.6474 16.8274 12.1389 16.5279 12.7047C16.3305 13.3359 16.276 14.0031 16.3684 14.658C16.405 15.2667 16.4474 15.9558 16.2031 16.2002C15.9587 16.4445 15.2696 16.4006 14.6609 16.3655C14.006 16.2733 13.3388 16.3278 12.7076 16.525C12.1419 16.8246 11.6504 17.2471 11.2693 17.7614C10.8303 18.2574 10.3914 18.768 10.0095 18.768C9.62762 18.768 9.18282 18.2574 8.75119 17.7628C8.37007 17.2515 7.87971 16.8316 7.31582 16.5338C6.93859 16.3931 6.5374 16.328 6.13505 16.3421C5.879 16.3421 5.61855 16.3582 5.36104 16.3743C4.75236 16.4123 4.06467 16.4548 3.81886 16.2104C3.57305 15.9661 3.61694 15.2769 3.65499 14.6697C3.74732 14.0148 3.69284 13.3476 3.4955 12.7164C3.19624 12.1459 2.77212 11.6502 2.25474 11.2664C1.76165 10.8274 1.25101 10.3885 1.25101 10.0066C1.25101 9.6247 1.76165 9.18136 2.2562 8.74826C2.76997 8.36894 3.19241 7.87952 3.49257 7.31583C3.69241 6.68414 3.74889 6.01584 3.65791 5.35957C3.62133 4.7509 3.5789 4.06028 3.82179 3.81593C4.06467 3.57159 4.75529 3.61402 5.36396 3.6506C6.01835 3.7433 6.68517 3.68881 7.31582 3.49111C7.88152 3.1915 8.37297 2.76904 8.75412 2.25474C9.19306 1.76165 9.63201 1.25101 10.0154 1.25101C10.3987 1.25101 10.8421 1.76165 11.2737 2.2562C11.6548 2.77051 12.1463 3.19296 12.712 3.49258C13.3414 3.69127 14.007 3.74774 14.6609 3.65791C15.2696 3.61987 15.9573 3.57744 16.2031 3.82179C16.4489 4.06614 16.405 4.75529 16.367 5.3625C16.277 6.01792 16.334 6.68515 16.5338 7.31583C16.8332 7.88164 17.2557 8.37312 17.7701 8.75412C18.2661 9.19307 18.7768 9.63202 18.7768 10.0139C18.7768 10.3958 18.2588 10.8362 17.7643 11.2664Z" fill="#202020" />
        <path d="M9.38339 7.507C9.38339 7.13572 9.27329 6.77277 9.06702 6.46406C8.86074 6.15535 8.56756 5.91474 8.22454 5.77266C7.88152 5.63057 7.50407 5.5934 7.13992 5.66583C6.77577 5.73827 6.44127 5.91706 6.17874 6.17959C5.9162 6.44213 5.73741 6.77662 5.66498 7.14077C5.59254 7.50492 5.62972 7.88237 5.7718 8.22539C5.91389 8.56841 6.1545 8.8616 6.46321 9.06787C6.77192 9.27414 7.13486 9.38424 7.50615 9.38424C8.00402 9.38424 8.48151 9.18646 8.83356 8.83441C9.18561 8.48236 9.38339 8.00488 9.38339 7.507ZM6.88138 7.507C6.88138 7.38314 6.9181 7.26207 6.98692 7.15908C7.05573 7.0561 7.15353 6.97584 7.26796 6.92844C7.38239 6.88104 7.5083 6.86864 7.62978 6.8928C7.75126 6.91696 7.86284 6.97661 7.95042 7.06419C8.03801 7.15177 8.09765 7.26335 8.12181 7.38483C8.14598 7.50631 8.13357 7.63222 8.08618 7.74665C8.03878 7.86108 7.95851 7.95889 7.85553 8.0277C7.75254 8.09651 7.63147 8.13324 7.50761 8.13324C7.42525 8.13343 7.34366 8.11737 7.26751 8.08599C7.19136 8.0546 7.12216 8.00851 7.06385 7.95033C7.00554 7.89216 6.95928 7.82306 6.92772 7.74699C6.89616 7.67092 6.87991 7.58936 6.87991 7.507H6.88138ZM12.5058 10.6352C12.1344 10.6361 11.7717 10.7471 11.4634 10.9542C11.1552 11.1612 10.9153 11.4551 10.774 11.7985C10.6328 12.1419 10.5966 12.5195 10.67 12.8836C10.7434 13.2476 10.9231 13.5816 11.1864 13.8435C11.4497 14.1054 11.7847 14.2833 12.1492 14.3547C12.5136 14.4261 12.891 14.3878 13.2336 14.2447C13.5763 14.1016 13.8688 13.8601 14.0742 13.5507C14.2796 13.2413 14.3886 12.878 14.3874 12.5066C14.3859 12.009 14.1868 11.5324 13.834 11.1815C13.4811 10.8305 13.0034 10.6341 12.5058 10.6352ZM12.5058 13.1373C12.3819 13.1373 12.2608 13.1005 12.1579 13.0317C12.0549 12.9629 11.9746 12.8651 11.9272 12.7507C11.8798 12.6362 11.8674 12.5103 11.8916 12.3889C11.9157 12.2674 11.9754 12.1558 12.063 12.0682C12.1505 11.9806 12.2621 11.921 12.3836 11.8968C12.5051 11.8727 12.631 11.8851 12.7454 11.9325C12.8599 11.9799 12.9577 12.0601 13.0265 12.1631C13.0953 12.2661 13.132 12.3872 13.132 12.511C13.132 12.6771 13.066 12.8364 12.9486 12.9538C12.8312 13.0713 12.6719 13.1373 12.5058 13.1373ZM13.5593 6.45352C13.5054 6.39152 13.4391 6.34155 13.3647 6.30685C13.2902 6.27215 13.2093 6.25351 13.1272 6.25213C13.0451 6.25075 12.9636 6.26666 12.8881 6.29884C12.8125 6.33102 12.7446 6.37874 12.6887 6.43889L6.43804 12.6954C5.87765 13.2558 6.75115 14.1586 7.31594 13.5733L13.5724 7.31679C13.6314 7.26019 13.678 7.19203 13.7094 7.11659C13.7408 7.04114 13.7563 6.96002 13.755 6.87831C13.7536 6.7966 13.7354 6.71605 13.7014 6.6417C13.6675 6.56735 13.6186 6.5008 13.5578 6.44621L13.5593 6.45352Z" fill="#202020" />
    </svg>

);

const ReservationNotification = ({ item, removeNotificationData, handleChangeRefresh }) => {

    const sideNotificationFullWidth = useMedia("(max-width: 426px)");
    const [isPendindToAprobal, setPendindToAprobal] = useState(true);

    const handleChangeReservationStatus = async ({ status, item }) => {

        const reservationService = getService("reservations");
        try {
            await reservationService.get(item?.id)
                .then(async (res) => {
                    if (res?.status ===  'pendingApproval' ) {
                        await reservationService
                            .patch(item?.id, {
                                status,
                            })
                            .then((res) => {
                                message.success(
                                    status === STATUS_RESERVATION.acquired
                                        ? "Reserva aprobada!"
                                        : "Reserva no aprobada!"
                                )
                            });
                    } else {
                        removeNotificationData({ id: item.id, notificationType: item.notificationType });
                        if(handleChangeRefresh){
                            handleChangeRefresh();
                        }
                    }
                })

        } catch (error) {
            message.error(error.message)
        }
    };




    useEffect(() => {
        const timeOut = setTimeout(()=> {
            removeNotificationData({ id: item.id, notificationType: item.notificationType });
            if(handleChangeRefresh){
                handleChangeRefresh();
            };
        },600000);
        return ()=>{
            clearTimeout(timeOut);
        }
    }, []);
    

    return (
        <Row
            key={`reservation-notification-${item?.id}`}
            style={{
                minHeight: '11rem',
                marginBottom: "1rem",
                borderRadius: "1rem",
                boxShadow: '0 2px 10px -1px rgba(69, 90, 100, 0.3)',
                background: "#fff",
                overflow: "hidden",
                borderLeft: sideNotificationFullWidth ? 'none' : '7px solid #6D25FB',
                padding: '15px 0px',
                minWidth: '380px',
                overflowX: 'hidden',
            }}>
            <Col flex={'100%'}>
                <Row
                    justify={'space-between'}
                    align="middle"
                    style={{
                        borderBottom: '1px solid #F0EFEF',
                        paddingBottom: '15px',
                        margin: '0px 8px'
                    }}
                >
                    <Col flex={'20px'} />
                    <Col flex={'auto'} style={{ display: 'flex', justifyContent: 'center' }} >
                        <div style={{ fontSize: '16px' }}>
                            Reserva por aprobar
                        </div>
                    </Col>
                    <Col flex={'20px'}>
                        <Button
                            shape='circle'
                            onClick={() => {
                                removeNotificationData({ id: item.id, notificationType: item.notificationType });
                            }}
                        >
                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M15 5L5 15" stroke="#202020" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M5 5L15 15" stroke="#202020" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </Button>
                    </Col>
                </Row>
                <Row
                    type='flex'
                    gutter={16}
                    wrap={false}
                    align="middle"
                    style={{
                        marginTop: '15px',
                    }}
                >
                    <Col flex={'25%'}
                        style={{
                            whiteSpace: 'nowrap',
                            padding: "6px",

                            display: "flex",
                            justifyContent: 'center'
                        }}
                    >
                        <Typography.Title level={5}
                            style={{
                                margin: 0,
                                fontWeight: 'bold',
                            }}>
                            {
                                moment(
                                    `${item?.meta_start_hour}`,
                                    "HH:mm:ss"
                                ).format("hh:mm a")
                            }
                        </Typography.Title>
                    </Col>
                    <Col
                        flex={isPendindToAprobal ? '55%' : '75%'}
                        style={{
                            borderLeft: `1px solid ${sideNotificationFullWidth ? '#FFB091' : '#d9d9d9'}`,
                        }}
                    >
                        <Space direction='vertical' size={'small'} >
                            <Row>
                                <Tooltip title={item?.meta_establishment_name}>
                                    <span
                                        style={{
                                            margin: 0,
                                            maxWidth: '100%',
                                            overflow: 'hidden',
                                            textOverflow: 'ellipsis',
                                            Size: '14px',
                                            fontWeight: '900'
                                        }}
                                    >
                                        {item?.meta_establishment_name}
                                    </span>
                                </Tooltip>
                            </Row>
                            <Row>
                                <Col
                                    style={{
                                        maxWidth: '80%',
                                        overflow: 'hidden',
                                        textOverflow: 'ellipsis',
                                        whiteSpace: 'nowrap',
                                        fontSize: `${`${item?.meta_user_first_name + item?.meta_user_last_name}`.length > 20 ? 12 : 12}px`,
                                    }}
                                >
                                    <Tooltip title={`${item?.meta_user_first_name || ""} ${item?.meta_user_last_name || ""}`}>
                                        <UserIcon />{" "}
                                        {item?.meta_user_first_name || ""} {item?.meta_user_last_name || ""}
                                    </Tooltip>
                                </Col>
                            </Row>
                            <Row>
                                <span style={{ fontSize: '12px' }}>
                                    <CalendarIcon />
                                    {" "}
                                    {
                                        moment(
                                            item?.meta_day,
                                            "YYYY-MM-DD"
                                        ).format("dddd D MMMM")
                                    }
                                </span>
                            </Row>
                            <Row
                                gutter={[16]}
                                align='middle'
                            >
                                <Col >
                                    <Badge
                                        color='transparent'
                                    >
                                        <ComunityIcon />
                                        {" "}
                                        <span style={{ fontSize: '12px' }}>

                                            {item?.persons || ""}
                                        </span>
                                    </Badge>
                                </Col>
                                <Col
                                    style={{
                                        maxWidth: '80%',
                                        overflow: 'hidden',
                                        textOverflow: 'ellipsis',
                                        whiteSpace: 'nowrap',
                                        fontSize: '12px'
                                    }}
                                >
                                    {
                                        !item?.meta_deal_name ? (
                                            <>
                                                <Badge
                                                    color='transparent'
                                                >
                                                    <DiscountIcon />
                                                    {" "}
                                                    <span style={{ fontSize: '12px' }}>

                                                        {`${item?.meta_percentage || ""}%`}
                                                    </span>
                                                </Badge>
                                            </>
                                        ) : (
                                            <Tooltip title={item?.meta_deal_name}>
                                                <span
                                                    style={{
                                                        color: '#6B24F8',
                                                        fontSize: '1em',
                                                    }}
                                                >
                                                    <IoTicketOutline />
                                                    {"       "}
                                                    {item?.meta_deal_name}
                                                </span>
                                            </Tooltip>
                                        )
                                    }
                                </Col>
                            </Row>
                        </Space>
                    </Col>
                    {
                        isPendindToAprobal ? (
                            <Col
                                flex={'20%'}
                                style={{
                                    display: 'flex',
                                    justifyContent: 'center',
                                    padding: "0px 5px",
                                    width: '45px',
                                    height: '45px',
                                }}
                            >
                                <MinuteProgress
                                    record={item}
                                    width={45}
                                    onFinish={() => {
                                        handleChangeReservationStatus({ status: STATUS_RESERVATION.acquired, item });
                                        setPendindToAprobal(false);
                                    }}
                                />
                            </Col>
                        ) : null
                    }

                </Row>
                {
                    item?.user_comment ? (
                        <Row style={{
                            marginTop: '15px',
                            background: '#F4EFFE',
                            padding: '15px 25px'
                        }}>
                            <Col flex={'100%'}>
                                <Row>
                                    <Typography.Text
                                        style={{
                                            margin: 0,
                                            maxWidth: '100%',
                                            overflow: 'hidden',
                                            textOverflow: 'ellipsis',
                                            whiteSpace: 'nowrap'
                                        }}
                                    >
                                        Descripción y/o preferencias
                                    </Typography.Text>
                                </Row>
                                <Row>
                                    <span style={{ fontSize: '12px' }}>
                                        {item?.user_comment}
                                    </span>
                                </Row>
                            </Col>
                        </Row>
                    ) : null
                }
                {
                    isPendindToAprobal ? (
                        <Row
                            gutter={16}
                            style={{
                                marginTop: '15px',
                                padding: '0px 16px'
                            }}
                            wrap={false}
                        >
                            <Col span={12}>
                                <AsyncButton
                                    block
                                    icon={<><CheackIcon />{" "}</>}
                                    style={{
                                        background: '#fff',
                                        color: '#00B84E',
                                        borderRadius: '6px',
                                        border: '1px solid #00B84E',
                                    }}
                                    onClick={async () => {
                                        await handleChangeReservationStatus({ status: STATUS_RESERVATION.acquired, item });
                                        removeNotificationData({ id: item.id, notificationType: item.notificationType });
                                    }}
                                >
                                    Aprobar
                                </AsyncButton>
                            </Col>
                            <Col span={12}>
                                <AsyncButton
                                    block
                                    placement="left"
                                    confirmText="Si rechazas esta reserva también se desactivará la hora por el día de hoy, ¿Desea Continuar?"
                                    icon={<><CancelIcon />{" "}</>}
                                    style={{
                                        background: '#fff',
                                        color: '#D62626',
                                        borderRadius: '6px',
                                        border: '1px solid #D62626',
                                    }}
                                    onClick={async () => {
                                        await handleChangeReservationStatus({ status: STATUS_RESERVATION.notApproved, item });
                                        removeNotificationData({ id: item.id, notificationType: item.notificationType });
                                    }}
                                >
                                    Rechazar
                                </AsyncButton>
                            </Col>
                        </Row>
                    ) : null
                }

            </Col>
        </Row >
    );
}

export default ReservationNotification;