{"version":3,"sources":["views/reservationsHistory/index.jsx","components/Styles.js","components/resizablePanel/ResizablePanels.js","components/users/UserForm.js","components/modal/Styles.js","components/modal/Modal.js","components/HeadLine.js"],"names":["RangePicker","_DatePicker","USERS_ROLES","statusFormatter","acquired","inactive","claimed","notClaimed","expired","canceled","pendingApproval","pendingClaimedVerification","notApproved","canceledByEstablishment","canceledByUser","columns","title","dataIndex","sorter","render","value","_ref","meta_user_first_name","meta_user_last_name","concat","record","moment","format","width","numeral","ReservationsHistory","selectColumns","setColumns","useState","selectedDate","setSelectedDate","selectedEstablishmentOptions","setEstablishmentOptions","establishmentFilters","useSelector","_ref2","dashboardReducer","userRole","_ref3","_appReducer$user","appReducer","user","role","useEffect","establishment_branch_id","establishment_id","async","establishmentService","getService","find","query","id","$client","skipJoins","$select","then","response","_response$data","responseEstablishment","data","show_booking_id","catch","error","_message","message","getEstablishmentsOptions","_jsxs","_Layout","Content","style","height","overflow","padding","children","_Row","align","color","gutter","_jsx","_Col","IoCalendarClearOutline","size","_Typography","Title","level","margin","_Divider","background","borderTop","marginTop","marginBottom","span","Grid","searchField","searchText","search","custom","filterDefaultValues","_objectSpread","$and","meta_day","$lte","$gte","$sort","source","permitFetch","locale","onChange","rangeDates","_","map","date","err","handleChange","AsyncButton","type","borderRadius","onClick","isEmpty","info","reservationsHistoryService","exportExcelReservationHistory","end_date","start_date","window","open","path","actions","Box","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","TabsStyled","_Tabs","_templateObject5","ControlledElement","React","Component","constructor","super","this","onMinimizeClicked","bind","onMaximizeClicked","state","currentSize","getSize","animate","done","from","to","Promise","resolve","setState","domElement","ReactDOM","findDOMNode","props","orientation","offsetHeight","offsetWidth","start","end","step","fn","stepFn","requestAnimationFrame","ReflexElement","position","zIndex","xs","sm","md","lg","xl","justify","fontSize","borderBottom","borderRight","flex","counter","_Button","shape","paddingTop","Option","_Select","roles","name","status","genders","codepush_environment_options","true_false","UserForm","_objectWithoutProperties","_excluded","navigate","useNavigate","setRole","location","qs","parse","replace","SimpleForm","onSubmit","textAcceptButton","FileUploader","onFinish","url","file","handleUploadFinish","field","_id","service","galleryService","payloads","meta_file_name","meta_size","String","meta_media_type","description","create","patch","_Input","placeholder","label","validations","required","Password","d","xtype","input","TextArea","autoSize","_Modal","transparent","ModalView","WrapperHeadLine"],"mappings":"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","file":"static/js/38.6f14a148.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport numeral from \"numeral\";\nimport { Col, message, Typography, Row, Divider, Layout, DatePicker } from 'antd';\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport { Grid } from '../../components/com';\nimport { Box } from '../../components';\nimport { useSelector } from 'react-redux';\n\nimport { IoCalendarClearOutline } from 'react-icons/io5';\nimport _ from 'lodash';\nimport AsyncButton from '../../components/asyncButton';\nimport { getService } from '../../services';\n\nconst { RangePicker } = DatePicker;\n\nconst format = \"h:mm a\";\n\nconst USERS_ROLES = {\n    admin: 'admin',\n    user: 'user',\n};\n\nconst statusFormatter = {\n    acquired: \"Adquirido\",\n    inactive: \"Inactivo\",\n    claimed: \"Reclamado\",\n    notClaimed: \"No reclamado\",\n    expired: \"Expirado\",\n    canceled: \"Cancelado\",\n    pendingApproval: \"Pendiente de aprobación\",\n    pendingClaimedVerification: 'Pendiente de verificación de cupón',\n    notApproved: 'No aprobado',\n    canceledByEstablishment: 'Cancelado por el establecimiento',\n    canceledByUser: 'Cancelado por el usuario'\n};\n\nconst columns = [\n    \n    {\n        title: \"Nombre\",\n        dataIndex: \"meta_user_first_name\",\n        sorter: true,\n        render: (value, { meta_user_first_name, meta_user_last_name }) => `${meta_user_first_name} ${meta_user_last_name}`\n    },\n    {\n        title: \"Dirección\",\n        dataIndex: \"meta_establishment_branch_address\",\n        sorter: true,\n    },\n    {\n        title: \"Fecha\",\n        dataIndex: \"meta_day\",\n        sorter: true,\n    },\n    {\n        title: \"Hora Inicio\",\n        dataIndex: \"meta_start_hour\",\n        sorter: true,\n        render: (value, record) => `${moment(value, \"HH:mm:ss\").format(format) || \"\"}`,\n    },\n    {\n        title: \"Personas\",\n        dataIndex: \"persons\",\n        sorter: true,\n        width: '100px'\n    },\n    {\n        title: \"Descuento\",\n        dataIndex: \"meta_percentage\",\n        sorter: true,\n        render: (value) => `${value}%`,\n    },\n    {\n        title: \"Valor factura\",\n        dataIndex: \"reported_invoice_amount\",\n        sorter: true,\n        render: (value) => `${numeral(value).format(\"$0,0\")}`\n    },\n    {\n        title: \"Estado\",\n        dataIndex: \"status\",\n        sorter: true,\n        render: (value) => `${statusFormatter[value]}`\n    },\n];\n\nconst ReservationsHistory = () => {\n\n\n    const [selectColumns, setColumns] = useState(columns)\n    const [selectedDate, setSelectedDate] = useState([]);\n    const [selectedEstablishmentOptions, setEstablishmentOptions] = useState([]);\n    const establishmentFilters = useSelector(({ dashboardReducer }) => dashboardReducer.establishmentFilters);\n    const userRole = useSelector(({ appReducer }) => appReducer?.user?.role);\n\n    const handleChange = (rangeDates) => {\n        try {\n            setSelectedDate(_.map(rangeDates, (date) => date.format(\"YYYY-MM-DD\")));\n        } catch (err) {\n            message.error(err.message);\n        }\n    };\n\n    const getEstablishmentsOptions = async () => {\n\n        const establishmentService = getService('establishments');\n        await establishmentService.find({\n            query: {\n                id: establishmentFilters?.establishment_id,\n                $client: { skipJoins: true },\n                $select: ['show_booking_id']\n            }\n        })\n            .then((response) => {\n                const responseEstablishment = response?.data?.[0]\n\n                if( responseEstablishment?.show_booking_id === 'active') {\n                    setColumns([{\n                        title: \"Id\",\n                        dataIndex: \"id\",\n                        sorter: true,\n                    }, ...columns])\n                }else{\n                    setColumns(columns)\n                }\n\n            })\n            .catch((error) => {\n                message.error(error.message)\n            })\n    }\n\n\n    const onExportExcelReservationsHistory = async () => {\n        if (_.isEmpty(selectedDate)) {\n            message.info('¡Selecciona un rango de fechas para exportar el documento!')\n            return;\n        }\n        const reservationsHistoryService = getService('reservations-history');\n        await reservationsHistoryService.find({\n            query: {\n                $client: { exportExcelReservationHistory: true },\n                establishment_id: establishmentFilters.establishment_id,\n                establishment_branch_id: establishmentFilters.establishment_branch_id,\n                end_date: selectedDate[1],\n                start_date: selectedDate[0],\n            }\n        })\n            .then((response) => window.open(response.path, '_blank'))\n            .catch((error) => message.error(error.message || '¡No se pudo exportar los registros!'))\n    };\n\n    useEffect(() => {\n        if (!(establishmentFilters.establishment_branch_id)) {\n            setSelectedDate([]);\n        }\n\n    }, [establishmentFilters])\n    \n    useEffect(() => {\n\n        if (establishmentFilters?.establishment_id) {\n            getEstablishmentsOptions()\n        }\n    }, [establishmentFilters?.establishment_id])\n\n\n    return (\n        <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n            <Row>\n                <Row\n                    align='middle'\n                    style={{\n                        color: \"var(--purple)\",\n                    }}\n                    gutter={[16, 16]}\n                >\n                    <Col>\n                        <IoCalendarClearOutline size={30} />\n                    </Col>\n                    <Col>\n                        <Typography.Title level={3} style={{ margin: 0 }}>\n                            Historial de reservas\n                        </Typography.Title>\n                    </Col>\n                </Row>\n                <Divider style={{ background: 'transparent', borderTop: 0, marginTop: 0 }} />\n            </Row>\n            <Row style={{ height: '100%', marginBottom: '1rem' }} gutter={16}>\n                <Col span={24}>\n                    {\n                        !(establishmentFilters.establishment_id) ? (\n                            <Box>\n                                *Seleccione un restaurante para ver los registros*\n                            </Box>\n                        ) :\n                            (\n                                <Grid\n                                    searchField=\"q\"\n                                    searchText=\"Usuario...\"\n                                    search={true}\n                                    custom={true}\n                                    filterDefaultValues={{\n                                        $and: [\n                                            { meta_day: { $lte: selectedDate[1] } },\n                                            { meta_day: { $gte: selectedDate[0] } },\n                                        ],\n                                        $sort: {\n                                            meta_day: -1\n                                        },\n                                        ...establishmentFilters\n                                    }}\n                                    columns={\n                                        userRole === USERS_ROLES.admin\n                                            ? [\n                                                {\n                                                    title: \"Id usuario\",\n                                                    dataIndex: \"user_id\",\n                                                    sorter: true,\n                                                },\n                                                ...selectColumns\n                                            ] :\n                                            selectColumns\n                                    }\n                                    source={\"reservations\"}\n                                    permitFetch={!!(establishmentFilters.establishment_id)}\n                                    title={\n                                        <Row gutter={16} align=\"middle\">\n                                            <Col>\n                                                <RangePicker\n                                                    locale={locale}\n                                                    onChange={(rangeDates) => handleChange(rangeDates)}\n                                                />\n                                            </Col>\n                                            <Col>\n                                                <AsyncButton\n                                                    type=\"primary\"\n                                                    style={{ borderRadius: '0.5rem' }}\n                                                    onClick={onExportExcelReservationsHistory}\n                                                >\n                                                    Exportar Historial\n                                                </AsyncButton>\n                                            </Col>\n                                        </Row>\n                                    }\n                                    actions={{}}\n                                />\n                            )\n                    }\n                </Col>\n            </Row>\n        </Layout.Content >\n    )\n}\n\nexport default ReservationsHistory;","import { Row, Tabs } from 'antd';\nimport styled from 'styled-components';\n\nexport const HeadLine = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: baseline;\n  flex-wrap: wrap;\n\n  width:100%!important;\n\n  background-color:var(--gray-dark-1)!important;\n  color:#fff!important;\n\n  & .ant-checkbox-wrapper{\n    margin:0px 10px;\n  }\n  & h2{\n    color: #fff!important;\n    text-transform: uppercase!important;\n    padding: 4px 10px!important;\n    font-size: 16px!important;\n    vertical-align: middle!important;\n    margin-bottom: 0px!important;\n  }\n`;\nexport const AvatarWrapper = styled.div`\n\n    position:relative;\n   \n    display: flex;\n    justify-content: start;\n    align-items: center;\n\n    & .container{\n      width: 34px;\n      position:relative;\n    }\n    & .container:hover .ant-btn{\n      display:inline-block;\n    }\n    & .ant-btn,.ant-btn:hover{\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 999;\n      height: 34px!important;\n      display: none;\n      width: 34px!important;\n      background: #0010214f!important;\n      color: #FFF!important;\n      font-weight: bold;\n      display:none;\n    }\n`;\n\nexport const Tools = styled.div`\n    display:flex;\n    justify-content: space-between;\n`;\nexport const Box = styled(Row)`\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n  border-radius:1rem;\n  background: #fff ;\n  padding: 2rem;\n`;\nexport const TabsStyled = styled(Tabs)`\n    & .ant-tabs-nav{\n        background-color:white;\n        border-radius:1rem;\n        box-shadow: rgb(0 0 0 / 10%) 0px 4px 12px;\n        padding:0 1rem;\n    }\n`;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Row, Col, Button, Typography } from 'antd';\nimport {\n    ReflexElement\n} from 'react-reflex'\nimport 'react-reflex/styles.css'\n\nclass ControlledElement extends React.Component {\n\n    constructor() {\n\n        super()\n\n        this.onMinimizeClicked =\n            this.onMinimizeClicked.bind(this)\n\n        this.onMaximizeClicked =\n            this.onMaximizeClicked.bind(this)\n\n        this.state = {\n            size: -1,\n        }\n    }\n\n    onMinimizeClicked() {\n\n        const currentSize = this.getSize()\n\n        const update = (size) => {\n\n            return new Promise((resolve) => {\n\n                this.setState({\n                    size: size < 50 ? 50 : size\n                }, () => resolve())\n            })\n        }\n\n        const done = (from, to) => {\n\n            return from < to\n        }\n\n        this.animate(\n            currentSize, 50, -50,\n            done, update)\n\n        this.setState({\n            ...this.state,\n        })\n    }\n\n    onMaximizeClicked() {\n\n        const currentSize = this.getSize()\n\n        const update = (size) => {\n\n            return new Promise((resolve) => {\n\n                this.setState({\n                    size\n                }, () => resolve())\n            })\n        }\n\n        const done = (from, to) => {\n\n            return from > to\n        }\n\n        this.animate(\n            currentSize, 300, 50,\n            done, update)\n\n\n    }\n\n    getSize() {\n\n        const domElement = ReactDOM.findDOMNode(this)\n\n        switch (this.props.orientation) {\n\n            case 'horizontal':\n                return domElement.offsetHeight\n\n            case 'vertical':\n                return domElement.offsetWidth\n\n            default:\n                return 0\n        }\n    }\n\n    animate(start, end, step, done, fn) {\n\n        const stepFn = () => {\n\n            if (!done(start, end)) {\n\n                fn(start += step).then(() => {\n                    requestAnimationFrame(stepFn)\n                })\n            }\n        }\n\n        stepFn()\n    }\n\n\n\n    render() {\n\n        return (\n            <ReflexElement size={this.state.size} {...this.props}>\n                <Row\n                    style={{\n                        position: 'fixed',\n                        zIndex: 1,\n                        width: '100%'\n                    }}>\n                    <Col xs={24} sm={24} md={12} lg={9} xl={7}>\n                        <Row\n                            type='flex'\n                            align='middle'\n                            justify=\"space-between\"\n                            style={{\n                                height: 50,\n                                width: '100%',\n                                fontSize: '1.2em',\n                                background: \" #fafafa\",\n                                borderBottom: \"1px solid #d9d9d9\",\n                                borderRight: \"1px solid #d9d9d9\",\n                                borderTop: \"1px solid #d9d9d9\",\n                                padding: \"0px 10px\",\n                            }}\n                        >\n                            <Col flex='auto' style={{ overflow: 'hidden' }} >\n                                <Row\n                                    align=\"middle\"\n                                >\n                                    <Typography.Title\n                                        level={5}\n                                        style={{ margin: 0 }}\n                                    >\n                                        {this.props.title}\n                                    </Typography.Title>\n                                </Row>\n                            </Col>\n                            <Col flex='none'>\n                                < Row\n                                    type='flex'\n                                    align='middle'\n                                    gutter={16}\n                                >\n                                    <Col>\n                                        {this.props.counter}\n                                    </Col>\n                                    <Col>\n                                        <Button\n                                            type=\"text\"\n                                            shape=\"circle\"\n                                            onClick={this.onMinimizeClicked}\n                                        >\n                                            <Typography.Title level={5}>\n                                                -\n                                            </Typography.Title>\n                                        </Button>\n                                        <Button\n                                            type=\"text\"\n                                            shape=\"circle\"\n                                            onClick={this.onMaximizeClicked}\n                                        >\n                                            <Typography.Title level={5}>\n                                                +\n                                            </Typography.Title>\n                                        </Button>\n                                    </Col>\n                                </Row >\n                            </Col>\n                        </Row >\n                    </Col>\n                </Row>\n                <div\n                    style={{\n                        paddingTop: 50,\n                    }}>\n                    {this.props.children}\n                </div>\n            </ReflexElement>\n        )\n    }\n}\n\n\nexport default ControlledElement;","import React, { useState, useEffect } from \"react\";\nimport { SelectField, SimpleForm, DateField, FileUploader } from \"../com/form/\";\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport {\n  Icon,\n  Input,\n  Select,\n  message,\n  DatePicker,\n  Layout,\n  Row\n} from \"antd\";\nimport { ImageField } from \"../com\";\nimport { useNavigate } from \"react-router-dom\";\nimport qs from \"qs\";\n\nimport { getService } from '../../services';\n\nconst { Option } = Select;\n\nconst roles = [\n  {\n    id: \"user\",\n    name: \"Usuario\",\n  },\n  {\n    id: \"admin\",\n    name: \"Administrador\",\n  },\n];\n\nconst status = [\n  {\n    id: \"active\",\n    name: \"Activo\",\n  },\n  {\n    id: \"disabled\",\n    name: \"Desactivado\",\n  },\n  {\n    id: \"pending validation\",\n    name: \"Pendiente de validación\",\n  },\n  {\n    id: \"pending_information\",\n    name: \"Pendiente por información\",\n  },\n];\nconst genders = [\n  {\n    id: \"male\",\n    name: \"Masculino\",\n  },\n  {\n    id: \"female\",\n    name: \"Femenino\",\n  },\n];\n\nexport const codepush_environment_options = [\n  { id: \"production\", name: \"production\" },\n  { id: \"staging\", name: \"staging\" },\n];\n\nexport const true_false = [\n  { id: \"false\", name: \"False\" },\n  { id: \"true\", name: \"True\" },\n];\n\nconst exclude_admin_roles = [\"admin\"];\n\nconst UserForm = ({ source, id, ...props }) => {\n  const navigate = useNavigate();\n  \n  const [role, setRole] = useState();\n\n  const handleUploadFinish = (field, url, file, _id) => {\n    const service = getService(\"users\");\n    const galleryService = getService(\"gallery\");\n    let payloads = {\n      meta_file_name: file.name,\n      meta_size: String(file.size),\n      name: file.name,\n      meta_media_type: file.type,\n      path: url,\n      description: \"\",\n    };\n    galleryService\n      .create(payloads)\n      .then(({ id }) => {\n        if (_id !== \"create\")\n          service\n            .patch(_id, {\n              [field]: id,\n            })\n            .then((response) => { })\n            .catch((err) => message.error(err.message));\n      })\n      .catch((err) => message.error(err.message));\n  };\n\n  useEffect(() => {\n    if (props.location) {\n      let { search } = props.location;\n      let query = qs.parse(search.replace(/\\?/, \"\"));\n      if (query) {\n        let { role } = query;\n        setRole(role);\n      }\n    }\n  }, [props.location]);\n\n  return (\n    <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n      <Row style={{ padding: '2rem', background: 'white', borderRadius: '0.5rem' }}>\n        <SimpleForm\n          id={id}\n          source={source || \"users\"}\n          onSubmit={() => {\n            navigate(`/dashboard/management/users`);\n          }}\n          textAcceptButton={id ? \"ACTUALIZAR\" : \"CREAR\"}\n        >\n          {id && (\n            <FileUploader\n              flex={1}\n              path={`users/${id}/avatar/`}\n              name='avatar_gallery'\n              source='avatar_gallery'\n              onFinish={(url, file) =>\n                handleUploadFinish(\"avatar_gallery_id\", url, file, id)\n              }\n            />\n          )}\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Nombre\"\n            label=\"Nombre\"\n            name=\"first_name\"\n            validations={[{ required: true, message: \"El nombre es requerido\" }]}\n          />\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Apellido\"\n            label=\"Apellido\"\n            name=\"last_name\"\n            validations={[{ required: true, message: \"El apellido es requerido\" }]}\n          />\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Email\"\n            label=\"Correo\"\n            type=\"email\"\n            name=\"email\"\n            validations={[{ required: true, message: \"El email es requerido\" }]}\n          // prefix={<Icon size=\"large\" type=\"mail\" />}\n          />\n          <Input.Password\n            size=\"large\"\n            flex={0.5}\n            type=\"password\"\n            // prefix={<Icon size=\"large\" type=\"lock\" />}\n            placeholder=\"●●●●●●●●\"\n            label=\"Contraseña\"\n            name=\"password\"\n            validations={[\n              !id && { required: true, message: \"La contraseña es requerida\" },\n            ]}\n          />\n          <Select\n            size=\"large\"\n            name=\"gender\"\n            label=\"Genero\"\n            placeholder=\"Seleccionar\"\n          >\n            {genders\n              .map((d) => (\n                <Option key={d.id} >{d.name}</Option>\n              ))}\n          </Select>\n          {!id &&\n            <DatePicker\n              xtype=\"date\"\n              size=\"large\"\n              label=\"Fecha de nacimiento\"\n              name=\"birthday\"\n              format=\"MM/DD/YYYY\"\n              locale={locale}\n            />\n          }\n          <Input\n            xtype=\"phone\"\n            input\n            size=\"large\"\n            flex={0.1}\n            placeholder=\"Ej: 57\"\n            label=\"Código del País\"\n            name=\"phone_country_code\"\n            // prefix={<Icon size=\"large\" type=\"phone\" />}\n            validations={[\n              { required: true, message: \"El código del país es requerido\" },\n            ]}\n          />\n          <Input\n            xtype=\"phone\"\n            input\n            size=\"large\"\n            flex={0.2}\n            placeholder=\"Celular\"\n            label=\"Celular\"\n            type=\"tel\"\n            name=\"phone\"\n            // prefix={<Icon size=\"large\" type=\"phone\" />}\n            validations={[\n              { required: true, message: \"El teléfono celular es requerido\" },\n            ]}\n          />(\n          <Select\n            size=\"large\"\n            label=\"Elige un rol para el usuario\"\n            name=\"role\"\n            placeholder=\"Elige un rol para el usuario\"\n            validations={[{ required: true, message: \"El estado es requerido\" }]}\n          >\n            {\n              roles.map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))\n            }\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"status\"\n            label=\"Estado\"\n            placeholder=\"Seleccionar\"\n            validations={[{ required: true, message: \"El estado es requerido\" }]}\n          >\n            {status\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"account_manager\"\n            label=\"Account manager\"\n            placeholder=\"Seleccionar\"\n          >\n            {true_false\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"test_user\"\n            label=\"Test User\"\n            placeholder=\"Seleccionar\"\n          >\n            {true_false\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"codepush_enviorment\"\n            label=\"Code Push Environment\"\n            placeholder=\"Seleccionar\"\n          >\n            {codepush_environment_options\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Input.TextArea\n            flex={1}\n            name='disabled_reason'\n            label=\"Disabled Reason\"\n            size=\"large\"\n            autoSize\n          />\n        </SimpleForm>\n      </Row>\n    </Layout.Content>\n  );\n};\nexport default UserForm;\n","import styled from 'styled-components';\nimport { Modal } from 'antd';\n\nexport const Wrapper = styled(Modal)`\n    ${\n    ({ transparent }) => {\n        if (transparent)\n            return `\n                & .ant-modal-content, .ant-modal-header {\n                    background-color: transparent!important;\n                    box-shadow: none!important;\n                }\n                & .ant-modal-header {\n                    border-bottom: 0px!important;\n                }\n                & .ant-modal-body {\n                    height: 85vh!important;\n                    padding-top: 50px!important;\n                }\n                & .ant-modal-footer {\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    color: #FFF!important;\n                    border-top: 0px!important;\n                }\n                & .ant-list-item-meta-title{\n                    color: rgb(255 255 255);\n                    text-align:left;\n                }\n                & .ant-btn-link, .ant-btn-link:hover, .ant-btn-link:focus{\n                    color: rgb(255 255 255)!important;\n                }\n                & .ant-list-item-meta-description {\n                    color: rgb(255 255 255 / 90%);\n                }\n                & .ant-modal-close-x {\n                    font-size: 24px;\n                    color: #bbb;\n                }\n            `;\n    }\n    }\n`;","import React, { useState, useEffect } from 'react';\nimport { Modal } from 'antd';\nimport { Wrapper } from \"./Styles\"\nconst ModalView = ({ children, onCancel, visible, ...props }) => {\n    const [open, setOpen] = useState(visible || false);\n    useEffect(() => {\n        setOpen(visible);\n    }, [visible]);\n    return (<>\n        <Wrapper\n            onCancel={() => {\n                setOpen(false);\n                if (onCancel)\n                    onCancel()\n            }}\n            visible={open}\n            {...props}>\n            {children}\n        </Wrapper>\n    </>)\n}\n\nexport default ModalView;","import React from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: start;\n    align-items: baseline;\n    flex-wrap: wrap;\n    /* background-color:var(--gray-dark-1)!important; */\n    color: var(--gray-dark-1)!important;\n    & .ant-checkbox-wrapper{\n        margin:0px 10px;\n    }\n    & h2{\n        color: var(--antd-wave-shadow-color);\n        padding: 4px 10px!important;\n        font-size: 18px!important;\n        font-weight: bold;\n        vertical-align: middle!important;\n        margin-bottom: 0px!important;\n    }\n`;\nconst WrapperHeadLine = (props) => (<Wrapper>{props.children}</Wrapper>);\nexport default WrapperHeadLine;"],"sourceRoot":""}