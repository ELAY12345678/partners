{"version":3,"sources":["views/reservations/index.jsx","hooks/useCities.js"],"names":["status","name","id","columns","_ref","onEdit","onRemove","cities","dataIndex","key","title","sorter","width","render","meta_user_first_name","_ref2","meta_user_last_name","value","_$find","_","find","_ref3","moment","format","record","concat","parseInt","_jsxs","_Fragment","children","_jsx","_Button","type","onClick","icon","AiOutlineEdit","AsyncButton","AiOutlineDelete","confirmText","Reservations","reservationService","getService","drawerVisible","setDrawerVisible","useState","selectedReservation","setSelectedReservation","updateSource","setUpdateSource","startHourFilter","setStartHourFilter","loadingCities","useCities","_Layout","Content","style","height","overflow","padding","Grid","source","filterDefaultValues","meta_start_hour","$sort","meta_day","searchField","searchText","search","searchById","async","_ref4","remove","then","_message","success","catch","error","message","actions","filters","_InputNumber","alwaysOn","label","placeholder","allowEmpty","SelectField","choices","size","loading","_TimePicker","minuteStep","MINUTES_STEPS_FOR_DISCOUNTS","secondStep","onChange","_Drawer","placement","visible","onClose","SimpleForm","textAcceptButton","initialValues","onSubmit","_Select","flex","map","_ref5","index","Option","formatter","replace","parser","citiesService","setCities","setLoadingCities","useEffect","query","$limit","data","err"],"mappings":"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","file":"static/js/53.388c696e.chunk.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { Layout, message, Button, TimePicker, Drawer, Select, InputNumber } from 'antd';\nimport { Grid } from '../../components/com';\nimport { useCities } from '../../hooks/useCities';\nimport { getService } from '../../services';\nimport { useState } from 'react';\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport AsyncButton from '../../components/asyncButton';\nimport SelectField from \"../../components/com/form/SelectField\";\nimport { SimpleForm } from '../../components/com/form/';\nimport { MINUTES_STEPS_FOR_DISCOUNTS } from '../../constants';\n\nconst status = [\n    {\n        name: \"Adquirido\",\n        id: \"acquired\",\n    },\n    {\n        name: \"Inactivo\",\n        id: \"inactive\",\n    },\n    {\n        name: \"Reclamado\",\n        id: \"claimed\",\n    },\n    {\n        name: \"Not Claimed\",\n        id: \"notClaimed\",\n    },\n    {\n        name: \"Expirado\",\n        id: \"expired\",\n    },\n    {\n        name: \"Cancelado\",\n        id: \"canceled\",\n    },\n    {\n        name: \"Pending Approval\",\n        id: \"pendingApproval\",\n    },\n    {\n        name: \"Pending Verificación por cupón\",\n        id: \"pendingClaimedVerification\",\n    },\n    {\n        name: \"Not Approval\",\n        id: \"notApproved\",\n    },\n    {\n        name: \"Canceled by Establishment\",\n        id: \"canceledByEstablishment\",\n    },\n];\n\nconst columns = ({ onEdit, onRemove, cities }) => [\n    {\n        dataIndex: \"id\",\n        key: \"id\",\n        title: \"Id\",\n        sorter: true,\n        width: \"70px\",\n    },\n    {\n        dataIndex: \"user_id\",\n        key: \"user_id\",\n        title: \"User Id\",\n        sorter: true,\n        width: \"70px\",\n    },\n    {\n        dataIndex: \"meta_user_first_name\",\n        key: \"meta_user_first_name\",\n        title: \"Usuario\",\n        sorter: true,\n        width: \"130px\",\n        render: (meta_user_first_name, { meta_user_last_name }) => meta_user_first_name + ' ' + meta_user_last_name\n    },\n    {\n        dataIndex: \"meta_user_phone\",\n        key: \"meta_user_phone\",\n        title: \"Teléfono\",\n        width: \"100px\",\n        sorter: true,\n    },\n    {\n        dataIndex: \"meta_establishment_name\",\n        key: \"meta_establishment_name\",\n        title: \"Establecimiento\",\n        sorter: true,\n        width: \"150px\",\n    },\n    {\n        dataIndex: \"meta_establishment_branch_address\",\n        key: \"meta_establishment_branch_address\",\n        title: \"Sucursal\",\n        sorter: true,\n        width: \"150px\",\n    },\n    {\n        dataIndex: \"city_id\",\n        key: \"city_id\",\n        title: \"Ciudad\",\n        sorter: true,\n        render: (value) => _.find(cities, ({ id }) => value === id)?.name || '',\n        width: \"110px\",\n    },\n    {\n        dataIndex: \"status\",\n        key: \"status\",\n        title: \"Estado\",\n        sorter: true,\n        width: \"80px\",\n    },\n    {\n        dataIndex: \"meta_day\",\n        key: \"meta_day\",\n        title: \"Fecha\",\n        sorter: true,\n        width: \"100px\",\n        render: (value) => value ? moment(value).format(\"YYYY-MM-DD\") : '',\n    },\n    {\n        dataIndex: \"meta_start_hour\",\n        key: \"meta_start_hour\",\n        title: \"Hora\",\n        sorter: true,\n        width: \"70px\",\n        render: (value, record) => `${moment(value, \"HH:mm:ss\").format(\"h:mm a\") || \"\"}`,\n    },\n    {\n        dataIndex: \"createdAt\",\n        key: \"createdAt\",\n        title: \"Creación\",\n        sorter: true,\n        width: \"100px\",\n        render: (value) => value ? moment(value).format(\"YYYY-MM-DD h:mm a\") : '',\n    },\n    {\n        dataIndex: \"meta_percentage\",\n        key: \"meta_percentage\",\n        title: \"%\",\n        sorter: true,\n        width: \"50px\",\n        render: (value) => `${parseInt(value)}%`\n    },\n    {\n        dataIndex: \"persons\",\n        key: \"persons\",\n        title: \"Personas\",\n        sorter: true,\n        width: \"100px\",\n        render: (value) => `${value || \"\"}`\n    },\n    {\n        title: \"Acciones\",\n        dataIndex: 'id',\n        width: \"90px\",\n        key: 'actions',\n        render: (id, record) =>\n            <>\n                <Button\n                    type=\"text\"\n                    onClick={() => onEdit(record)}\n                    icon={<AiOutlineEdit />}\n                />\n                <AsyncButton\n                    type=\"link\"\n                    onClick={() => onRemove({ id })}\n                    icon={<AiOutlineDelete />}\n                    confirmText=\"Desea eliminar?\"\n                >\n                </AsyncButton>\n            </>\n    }\n];\n\nconst Reservations = () => {\n\n    const reservationService = getService('reservations');\n\n    const [drawerVisible, setDrawerVisible] = useState(false);\n    const [selectedReservation, setSelectedReservation] = useState();\n    const [updateSource, setUpdateSource] = useState(false);\n    const [startHourFilter, setStartHourFilter] = useState();\n\n    const [cities, loadingCities] = useCities();\n\n    const onEdit = (record) => {\n        setSelectedReservation(record);\n        setDrawerVisible(true);\n    };\n\n    const onRemove = async ({ id }) => {\n        await reservationService.remove(id)\n            .then(() => {\n                message.success(\"Reservación eliminada!\");\n                setUpdateSource(!updateSource);\n            })\n            .catch((error) =>\n                message.error('No se pudo eliminar la reservación! ' + error?.message)\n            )\n    };\n\n    return (\n        <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n            <Grid\n                source='reservations'\n                filterDefaultValues={{\n                    meta_start_hour: startHourFilter,\n                    $sort: {\n                        meta_day: -1\n                    }\n                }}\n                searchField=\"q\"\n                searchText=\"Esta... o usuario...\"\n                search={true}\n                searchById={true}\n                updateSource={updateSource}\n                columns={columns({ onEdit, onRemove, cities })}\n                actions={{}}\n                filters={\n                    <>\n                        <InputNumber\n                            alwaysOn\n                            source=\"establishment_branch_id\"\n                            name=\"establishment_branch_id\"\n                            label=\"Id sucursal\"\n                            placeholder=\"Id sucursal\"\n                            allowEmpty\n                            style={{ width: '110px' }}\n                        />\n                        <SelectField\n                            alwaysOn\n                            source=\"city_id\"\n                            name=\"city_id\"\n                            label=\"Ciudad\"\n                            placeholder=\"Ciudad\"\n                            allowEmpty\n                            choices={cities}\n                            size=\"medium\"\n                            loading={loadingCities}\n                        />\n                        <SelectField\n                            alwaysOn\n                            source=\"status\"\n                            name=\"status\"\n                            label=\"Estado\"\n                            placeholder=\"Estado\"\n                            allowEmpty\n                            choices={status}\n                            size=\"medium\"\n                            style={{ width: '12rem' }}\n                        />\n                    </>\n                }\n                title={\n                    <TimePicker\n                        style={{ width: '8rem' }}\n                        minuteStep={MINUTES_STEPS_FOR_DISCOUNTS}\n                        secondStep={60}\n                        format='HH:mm:ss'\n                        placeholder=\"Hora inicio\"\n                        onChange={(value) => value ? setStartHourFilter(moment(value).format('HH:mm:00')) : setStartHourFilter()}\n                    />\n                }\n            />\n            {\n                drawerVisible\n                &&\n                <Drawer\n                    title={'Editar Reserva'}\n                    placement=\"right\"\n                    visible={drawerVisible}\n                    onClose={() => {\n                        setDrawerVisible(false);\n                        setSelectedReservation();\n                    }}\n                >\n                    <SimpleForm\n                        source='reservations'\n                        textAcceptButton={'Guardar'}\n                        id={selectedReservation.id}\n                        initialValues={selectedReservation}\n                        onSubmit={() => {\n                            setDrawerVisible(false);\n                            setUpdateSource(!updateSource);\n                            setSelectedReservation();\n                        }}\n                    >\n                        <Select\n                            flex={1}\n                            name='status'\n                            label=\"Estado\"\n                            size='large'\n                        >\n                            {\n                                _.map(status, ({ id, name }, index) =>\n                                    <Select.Option\n                                        key={index}\n                                        value={id}\n                                    >\n                                        {name}\n                                    </Select.Option>\n                                )\n                            }\n                        </Select>\n                        <InputNumber\n                            flex={1}\n                            name='persons'\n                            label=\"Comensales\"\n                            size='large'\n                        />\n                        <InputNumber\n                            flex={1}\n                            name='previous_persons_change_by_establishment'\n                            label=\"Cambio de Numero de Personas x el Establecimiento\"\n                            size='large'\n                        />\n                        <InputNumber\n                            flex={1}\n                            name='reported_invoice_amount'\n                            label=\"Valor total factura\"\n                            size='large'\n                            formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n                        />\n                    </SimpleForm>\n                </Drawer>\n\n            }\n        </Layout.Content>\n    );\n}\n\nexport default Reservations;","import { useEffect, useState } from 'react';\nimport { message } from 'antd';\nimport { getService } from '../services';\n\nexport const useCities = () => {\n    const citiesService = getService(\"cities\");\n\n    const [cities, setCities] = useState([]);\n    const [loadingCities, setLoadingCities] = useState(false);\n\n    useEffect(() => {\n        setLoadingCities(true);\n        citiesService\n            .find({\n                query: {\n                    $limit: 100000,\n                    $sort: {\n                        name: 1,\n                    },\n                }\n            })\n            .then(({ data }) => {\n                setCities(data);\n                setLoadingCities(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n                setCities([]);\n                setLoadingCities(false);\n            });\n    }, []);\n\n\n    return [\n        cities,\n        loadingCities\n    ];\n}"],"sourceRoot":""}