{"version":3,"sources":["components/users/UserForm.js"],"names":["Option","_Select","roles","id","name","status","genders","codepush_environment_options","true_false","UserForm","_ref","source","props","_objectWithoutProperties","_excluded","navigate","useNavigate","role","setRole","useState","useEffect","location","search","query","qs","parse","replace","_jsx","_Layout","Content","style","height","overflow","padding","children","_Row","background","borderRadius","_jsxs","SimpleForm","onSubmit","textAcceptButton","FileUploader","flex","path","concat","onFinish","url","file","handleUploadFinish","field","_id","service","getService","galleryService","payloads","meta_file_name","meta_size","String","size","meta_media_type","type","description","create","then","_ref2","patch","response","catch","err","_message","error","message","_Input","placeholder","label","validations","required","Password","map","d","_DatePicker","xtype","format","locale","input","TextArea","autoSize"],"mappings":"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","file":"static/js/57.cc46c91e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { SelectField, SimpleForm, DateField, FileUploader } from \"../com/form/\";\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport {\n  Icon,\n  Input,\n  Select,\n  message,\n  DatePicker,\n  Layout,\n  Row\n} from \"antd\";\nimport { ImageField } from \"../com\";\nimport { useNavigate } from \"react-router-dom\";\nimport qs from \"qs\";\n\nimport { getService } from '../../services';\n\nconst { Option } = Select;\n\nconst roles = [\n  {\n    id: \"user\",\n    name: \"Usuario\",\n  },\n  {\n    id: \"admin\",\n    name: \"Administrador\",\n  },\n];\n\nconst status = [\n  {\n    id: \"active\",\n    name: \"Activo\",\n  },\n  {\n    id: \"disabled\",\n    name: \"Desactivado\",\n  },\n  {\n    id: \"pending validation\",\n    name: \"Pendiente de validación\",\n  },\n  {\n    id: \"pending_information\",\n    name: \"Pendiente por información\",\n  },\n];\nconst genders = [\n  {\n    id: \"male\",\n    name: \"Masculino\",\n  },\n  {\n    id: \"female\",\n    name: \"Femenino\",\n  },\n];\n\nexport const codepush_environment_options = [\n  { id: \"production\", name: \"production\" },\n  { id: \"staging\", name: \"staging\" },\n];\n\nexport const true_false = [\n  { id: \"false\", name: \"False\" },\n  { id: \"true\", name: \"True\" },\n];\n\nconst exclude_admin_roles = [\"admin\"];\n\nconst UserForm = ({ source, id, ...props }) => {\n  const navigate = useNavigate();\n  \n  const [role, setRole] = useState();\n\n  const handleUploadFinish = (field, url, file, _id) => {\n    const service = getService(\"users\");\n    const galleryService = getService(\"gallery\");\n    let payloads = {\n      meta_file_name: file.name,\n      meta_size: String(file.size),\n      name: file.name,\n      meta_media_type: file.type,\n      path: url,\n      description: \"\",\n    };\n    galleryService\n      .create(payloads)\n      .then(({ id }) => {\n        if (_id !== \"create\")\n          service\n            .patch(_id, {\n              [field]: id,\n            })\n            .then((response) => { })\n            .catch((err) => message.error(err.message));\n      })\n      .catch((err) => message.error(err.message));\n  };\n\n  useEffect(() => {\n    if (props.location) {\n      let { search } = props.location;\n      let query = qs.parse(search.replace(/\\?/, \"\"));\n      if (query) {\n        let { role } = query;\n        setRole(role);\n      }\n    }\n  }, [props.location]);\n\n  return (\n    <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n      <Row style={{ padding: '2rem', background: 'white', borderRadius: '0.5rem' }}>\n        <SimpleForm\n          id={id}\n          source={source || \"users\"}\n          onSubmit={() => {\n            navigate(`/dashboard/management/users`);\n          }}\n          textAcceptButton={id ? \"ACTUALIZAR\" : \"CREAR\"}\n        >\n          {id && (\n            <FileUploader\n              flex={1}\n              path={`users/${id}/avatar/`}\n              name='avatar_gallery'\n              source='avatar_gallery'\n              onFinish={(url, file) =>\n                handleUploadFinish(\"avatar_gallery_id\", url, file, id)\n              }\n            />\n          )}\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Nombre\"\n            label=\"Nombre\"\n            name=\"first_name\"\n            validations={[{ required: true, message: \"El nombre es requerido\" }]}\n          />\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Apellido\"\n            label=\"Apellido\"\n            name=\"last_name\"\n            validations={[{ required: true, message: \"El apellido es requerido\" }]}\n          />\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Email\"\n            label=\"Correo\"\n            type=\"email\"\n            name=\"email\"\n            validations={[{ required: true, message: \"El email es requerido\" }]}\n          // prefix={<Icon size=\"large\" type=\"mail\" />}\n          />\n          <Input.Password\n            size=\"large\"\n            flex={0.5}\n            type=\"password\"\n            // prefix={<Icon size=\"large\" type=\"lock\" />}\n            placeholder=\"●●●●●●●●\"\n            label=\"Contraseña\"\n            name=\"password\"\n            validations={[\n              !id && { required: true, message: \"La contraseña es requerida\" },\n            ]}\n          />\n          <Select\n            size=\"large\"\n            name=\"gender\"\n            label=\"Genero\"\n            placeholder=\"Seleccionar\"\n          >\n            {genders\n              .map((d) => (\n                <Option key={d.id} >{d.name}</Option>\n              ))}\n          </Select>\n          {!id &&\n            <DatePicker\n              xtype=\"date\"\n              size=\"large\"\n              label=\"Fecha de nacimiento\"\n              name=\"birthday\"\n              format=\"MM/DD/YYYY\"\n              locale={locale}\n            />\n          }\n          <Input\n            xtype=\"phone\"\n            input\n            size=\"large\"\n            flex={0.1}\n            placeholder=\"Ej: 57\"\n            label=\"Código del País\"\n            name=\"phone_country_code\"\n            // prefix={<Icon size=\"large\" type=\"phone\" />}\n            validations={[\n              { required: true, message: \"El código del país es requerido\" },\n            ]}\n          />\n          <Input\n            xtype=\"phone\"\n            input\n            size=\"large\"\n            flex={0.2}\n            placeholder=\"Celular\"\n            label=\"Celular\"\n            type=\"tel\"\n            name=\"phone\"\n            // prefix={<Icon size=\"large\" type=\"phone\" />}\n            validations={[\n              { required: true, message: \"El teléfono celular es requerido\" },\n            ]}\n          />(\n          <Select\n            size=\"large\"\n            label=\"Elige un rol para el usuario\"\n            name=\"role\"\n            placeholder=\"Elige un rol para el usuario\"\n            validations={[{ required: true, message: \"El estado es requerido\" }]}\n          >\n            {\n              roles.map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))\n            }\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"status\"\n            label=\"Estado\"\n            placeholder=\"Seleccionar\"\n            validations={[{ required: true, message: \"El estado es requerido\" }]}\n          >\n            {status\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"account_manager\"\n            label=\"Account manager\"\n            placeholder=\"Seleccionar\"\n          >\n            {true_false\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"test_user\"\n            label=\"Test User\"\n            placeholder=\"Seleccionar\"\n          >\n            {true_false\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"codepush_enviorment\"\n            label=\"Code Push Environment\"\n            placeholder=\"Seleccionar\"\n          >\n            {codepush_environment_options\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Input.TextArea\n            flex={1}\n            name='disabled_reason'\n            label=\"Disabled Reason\"\n            size=\"large\"\n            autoSize\n          />\n        </SimpleForm>\n      </Row>\n    </Layout.Content>\n  );\n};\nexport default UserForm;\n"],"sourceRoot":""}