{"version":3,"sources":["views/fidelizations/index.jsx"],"names":["TYPES","id","name","columns","_ref","onEdit","onRemove","dataIndex","key","title","sorter","render","record","_jsxs","_Fragment","children","_jsx","_Button","type","onClick","icon","AiOutlineEdit","AsyncButton","AiOutlineDelete","confirmText","Fidelizations","drawerVisible","setDrawerVisible","useState","selectedFidelizations","setSelectedFidelizations","updateSource","setUpdateSource","_Layout","Content","style","height","overflow","padding","Grid","source","filterDefaultValues","$sort","async","_ref2","fidelizationService","getService","remove","then","_message","success","catch","error","message","actions","extra","RoundedButton","AiOutlinePlus","_Drawer","concat","placement","visible","onClose","SimpleForm","textAcceptButton","initialValues","onSubmit","_InputNumber","flex","size","label","validations","required","_Select","_","map","_ref3","index","Option","value"],"mappings":"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","file":"static/js/66.3f773d40.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Layout, Drawer, InputNumber, Select, Button, message } from 'antd';\nimport { Grid } from '../../components/com';\nimport { getService } from '../../services';\nimport { SimpleForm } from '../../components/com/form/';\nimport { RoundedButton } from '../../components/com/grid/Styles';\n\nimport { AiOutlinePlus, AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport AsyncButton from '../../components/asyncButton';\nimport _ from 'lodash';\n\nconst TYPES = [\n    { id: 'administration', name: 'administration' },\n    { id: 'reservation_claimed', name: 'reservation_claimed' },\n    { id: 'pay_payment', name: 'pay_payment' },\n    { id: 'review_created', name: 'review_created' },\n    { id: 'reservation_not_claimed', name: 'reservation_not_claimed' },\n    { id: 'converted_to_appartaWallet', name: 'converted_to_appartaWallet' }\n];\n\nconst columns = ({ onEdit, onRemove }) => [\n    {\n        dataIndex: \"id\",\n        key: \"id\",\n        title: \"Id\",\n        sorter: true,\n    },\n    {\n        dataIndex: \"user_id\",\n        key: \"user_id\",\n        title: \"User Id\",\n        sorter: true,\n    },\n    {\n        dataIndex: \"points_add\",\n        key: \"points_add\",\n        title: \"Points Add\",\n        sorter: true,\n    },\n    {\n        dataIndex: \"points_substract\",\n        key: \"points_substract\",\n        title: \"Points Subtract\",\n        sorter: true,\n    },\n    {\n        dataIndex: \"type\",\n        key: \"type\",\n        title: \"Tipo\",\n        sorter: true,\n    },\n    {\n        dataIndex: \"description\",\n        key: \"description\",\n        title: \"Descripción\",\n        sorter: true,\n    },\n    {\n        title: \"Acciones\",\n        dataIndex: 'id',\n        key: 'actions',\n        render: (id, record) =>\n            <>\n                <Button\n                    type=\"text\"\n                    onClick={() => onEdit(record)}\n                    icon={<AiOutlineEdit />}\n                />\n                <AsyncButton\n                    type=\"link\"\n                    onClick={() => onRemove({ id })}\n                    icon={<AiOutlineDelete />}\n                    confirmText=\"Desea eliminar?\"\n                >\n                </AsyncButton>\n            </>\n    }\n];\n\nconst Fidelizations = () => {\n\n    const [drawerVisible, setDrawerVisible] = useState(false);\n    const [selectedFidelizations, setSelectedFidelizations] = useState();\n    const [updateSource, setUpdateSource] = useState(false);\n\n\n    const onEdit = (record) => {\n        setSelectedFidelizations(record);\n        setDrawerVisible(true);\n    };\n\n    const onRemove = async ({ id }) => {\n        const fidelizationService = getService('fidelizations');\n\n        await fidelizationService.remove(id)\n            .then(() => {\n                message.success(\"Finalización eliminada!\");\n                setUpdateSource(!updateSource);\n            })\n            .catch((error) =>\n                message.error('No se pudo eliminar la finalización! ' + error?.message)\n            )\n    };\n\n\n\n    return (\n        <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n            <Grid\n                source='fidelizations'\n                filterDefaultValues={{\n                    $sort: {\n                        id: -1\n                    }\n                }}\n                updateSource={updateSource}\n                columns={columns({ onEdit, onRemove })}\n                actions={{}}\n                extra={\n                    <div>\n                        <RoundedButton\n                            type=\"primary\"\n                            icon={<AiOutlinePlus />}\n                            onClick={() => setDrawerVisible(true)}\n                        >\n                            Agregar\n                        </RoundedButton>\n                    </div>\n                }\n            />\n            {\n                drawerVisible\n                &&\n                <Drawer\n                    title={`${selectedFidelizations ? 'Editar' : 'Crear'} puntos`}\n                    placement=\"right\"\n                    visible={drawerVisible}\n                    onClose={() => {\n                        setDrawerVisible(false);\n                        setSelectedFidelizations();\n                    }}\n                >\n                    <SimpleForm\n                        source='fidelizations'\n                        id={selectedFidelizations?.id}\n                        textAcceptButton={`${selectedFidelizations ? 'Actualizar' : 'Crear'}`}\n                        initialValues={selectedFidelizations}\n                        onSubmit={() => {\n                            setDrawerVisible(false);\n                            setSelectedFidelizations();\n                            setUpdateSource(!updateSource);\n                        }}\n                    >\n                        <InputNumber\n                            flex={1}\n                            size=\"large\"\n                            name='user_id'\n                            label='User Id'\n                            validations={[\n                                {\n                                    required: true,\n                                    message: ` User Id es requerido`\n                                }\n                            ]}\n                        />\n                        <Select\n                            flex={1}\n                            name='type'\n                            label=\"Tipo\"\n                            size='large'\n                            validations={[\n                                {\n                                    required: true,\n                                    message: 'Tipo es requerido',\n                                },\n                            ]}\n                        >\n                            {\n                                _.map(TYPES, ({ id, name }, index) =>\n                                    <Select.Option\n                                        key={index}\n                                        value={id}\n                                    >\n                                        {name}\n                                    </Select.Option>\n                                )\n                            }\n                        </Select>\n                        <InputNumber\n                            flex={0.5}\n                            size='large'\n                            name='points_add'\n                            label='Points Add'\n                        />\n                        <InputNumber\n                            flex={0.5}\n                            size='large'\n                            name='points_substract'\n                            label='Points Subtract'\n                        />\n                    </SimpleForm>\n                </Drawer>\n            }\n        </Layout.Content>\n    );\n}\n\nexport default Fidelizations;"],"sourceRoot":""}