{"version":3,"sources":["views/Transfer/hooks/useTransferDetails.js","views/Transfer/TransferDetails.jsx","views/Transfer/index.jsx","components/Styles.js","components/resizablePanel/ResizablePanels.js","components/users/UserForm.js","components/modal/Styles.js","components/modal/Modal.js","components/HeadLine.js"],"names":["serviceTransfers","getService","useTransferDetails","_ref","id","dataDetails","setDataDetails","useState","useEffect","async","_ref2","response","get","e","_message","error","message","getTransfersDetail","styled","_Typography","Paragraph","_templateObject","_taggedTemplateLiteral","Title1Purple","_templateObject2","Title2","_templateObject3","Title3","Title","_templateObject4","Text","_templateObject5","ModalTitle","_Col","_templateObject6","TransferDetails","_dataDetails$Consumpt","_dataDetails$Percenta","_dataDetails$administ","_dataDetails$commissi","_dataDetails$commissi2","_dataDetails$administ2","_dataDetails$Percenta2","_dataDetails$commissi3","_dataDetails$commissi4","_dataDetails$administ3","_dataDetails$commissi5","_numeral","_dataDetails$Consumpt2","_numeral2","_dataDetails$administ4","_dataDetails$Percenta3","_numeral3","_dataDetails$Percenta4","_numeral4","_dataDetails$commissi6","_dataDetails$commissi7","_numeral5","_dataDetails$commissi8","_dataDetails$commissi9","_numeral6","_dataDetails$commissi0","_dataDetails$Percenta5","_numeral7","_dataDetails$Percenta6","_numeral8","_dataDetails$administ5","_numeral9","_numeral0","_dataDetails$commissi1","_numeral1","_dataDetails$commissi10","_numeral10","_dataDetails$administ6","_numeral11","_numeral12","date","establishment_id","onCancel","visible","totalIngresos","ConsumptionsAndReservations","sum_income","PercentageSubsidized","administrationIncomes","totalEgresos","commissionsReservations","sum_commission_total_amount_tax_excl","commissionsAppartaPay","administrationOutcomes","sum_amount","sum_commission_total_amount_tax_incl","totalIva","sum_commission_tax_amount","_jsx","MyModal","title","_Fragment","children","_jsxs","_Row","AsyncButton","type","style","background","padding","boxShadow","marginTop","onClick","reportIncomeExoensesService","find","query","$client","generateExcelWithDetails","pay_withdrawal_id","then","window","open","path","catch","icon","xmlns","xmlnsXlink","width","height","viewBox","dataName","fill","clipPth","d","transform","stroke","strokeLinecap","strokeLinejoin","strokeWidth","className","paddingLeft","paddingRight","justify","apparta_pay_count","numeral","format","level","_Divider","reservations_count","reservations_persons","borderTop","RangePicker","_DatePicker","Transfer","selectedDate","setSelectedDate","paymentDetailsId","setPaymentDetailsId","establishmentFilters","useSelector","dashboardReducer","_Layout","Content","overflow","align","gutter","color","BsCreditCard2Front","size","margin","span","Grid","filterDefaultValues","meta_establishment_id","meta_establishment_branch_id","establishment_branch_id","status","$sort","status_date_completed","$and","$lte","$gte","custom","columns","setPaymentDetails","dataIndex","sorter","render","record","_record$pay_account","_record$pay_account$e","_record$pay_account2","_record$pay_account2$","display","pay_account","establishment","name","establishment_branch","address","moment","isAfter","_Button","_moment","source","permitFetch","actions","locale","onChange","rangeDates","startOf","utc","endOf","err","handleChange","borderRadius","_","isEmpty","info","date_end","date_start","Box","undefined","div","TabsStyled","_Tabs","ControlledElement","React","Component","constructor","super","this","onMinimizeClicked","bind","onMaximizeClicked","state","currentSize","getSize","animate","done","from","to","Promise","resolve","setState","_objectSpread","domElement","ReactDOM","findDOMNode","props","orientation","offsetHeight","offsetWidth","start","end","step","fn","stepFn","requestAnimationFrame","ReflexElement","position","zIndex","xs","sm","md","lg","xl","fontSize","borderBottom","borderRight","flex","counter","shape","paddingTop","Option","_Select","roles","genders","codepush_environment_options","true_false","UserForm","_objectWithoutProperties","_excluded","navigate","useNavigate","role","setRole","location","search","qs","parse","replace","SimpleForm","onSubmit","textAcceptButton","FileUploader","concat","onFinish","url","file","handleUploadFinish","field","_id","service","galleryService","payloads","meta_file_name","meta_size","String","meta_media_type","description","create","patch","_Input","placeholder","label","validations","required","Password","map","xtype","input","TextArea","autoSize","_Modal","transparent","ModalView","WrapperHeadLine"],"mappings":"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","file":"static/js/36.d48c429d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { message } from 'antd';\nimport { getService } from '../../../services';\n\nconst serviceTransfers = getService(\"pay-bank-transfer-detail\");\n\n\nexport const useTransferDetails = ({ id }) => {\n\n    const [dataDetails, setDataDetails] = useState({});\n\n    const getTransfersDetail = async ({ id }) => {\n        try {\n            const response = await serviceTransfers.get(id);\n            setDataDetails(response || {});\n        } catch (e) {\n            message.error(e.message);\n        }\n    }\n\n    useEffect(() => {\n        if (id) {\n            getTransfersDetail({ id });\n        }\n    }, [id])\n\n\n    return [\n        dataDetails,\n    ]\n};","import React from 'react';\nimport { Button, Col, Divider, message, Row, Typography } from 'antd';\nimport { HiOutlineDocumentDownload } from 'react-icons/hi';\n\nimport { useTransferDetails } from './hooks/useTransferDetails';\nimport numeral from 'numeral';\nimport { getService } from '../../services';\nimport AsyncButton from '../../components/asyncButton';\n\nimport styled from \"styled-components\";\nimport { MyModal } from '../../components/com';\n\nconst Title1 = styled(Typography.Paragraph)`\n    font-weight: 700 !important;\n    font-size: 1.125rem !important;\n    color: black;\n`;\n\nconst Title1Purple = styled(Typography.Paragraph)`\n    font-weight: 700 !important;\n    font-size: 1.125rem;\n    color: var(--primary) !important;\n`;\n\nconst Title2 = styled(Typography.Paragraph)`\n    font-weight: 700 !important;\n    font-size: 0.875rem !important;\n    color: var(--primary) !important;\n    margin-bottom: 0px !important;\n`;\n\nconst Title3 = styled(Typography.Title)`\n    font-weight: 700 !important;\n    font-size: 0.75rem !important;\n    color: black;\n`;\nconst Text = styled(Typography.Paragraph)`\n    font-weight: 400 !important;\n    font-size: 0.75rem;\n    color: black;\n`;\n\nconst ModalTitle = styled(Col)`\n    padding: 15px 20px !important;\n    & .downloadLink {\n    }\n    & .ant-btn-link {\n        padding: 0px !important;\n        margin-top: 14px;\n\n        text-decoration-line: underline !important;\n        font-weight: 700 !important;\n        color: var(--white) !important;\n        font-size: 0.875rem !important;\n    }\n    & .textLink {\n        text-decoration-line: underline !important;\n        font-weight: 700 !important;\n        color: var(--white) !important;\n        font-size: 0.875rem !important;\n        margin-left: 10px;\n    }\n`;\n\n\nconst TransferDetails = ({ id,date, establishment_id, onCancel, visible }) => {\n\n    const [dataDetails] = useTransferDetails({ id });\n\n    const onExportExcelTransferDetails = async () => {\n        const reportIncomeExoensesService = getService('report-income-expenses');\n        await reportIncomeExoensesService.find({\n            query: {\n                $client: { generateExcelWithDetails: true },\n                pay_withdrawal_id: id,\n                establishment_id\n            }\n        })\n            .then((response) => window.open(response.path, '_blank'))\n            .catch((error) => message.error(error.message || 'No se pudo exportar los registros!'))\n    };\n\n    const totalIngresos = dataDetails?.ConsumptionsAndReservations?.sum_income\n        + dataDetails?.PercentageSubsidized?.sum_income\n        + dataDetails?.administrationIncomes?.sum_income;\n\n    const totalEgresos = dataDetails?.commissionsReservations?.sum_commission_total_amount_tax_excl\n        + dataDetails?.commissionsAppartaPay?.sum_commission_total_amount_tax_excl\n        + dataDetails?.administrationOutcomes?.sum_amount\n        + dataDetails?.PercentageSubsidized?.sum_commission_total_amount_tax_incl;\n\n    const totalIva = dataDetails?.commissionsReservations?.sum_commission_tax_amount\n        + dataDetails?.commissionsAppartaPay?.sum_commission_tax_amount\n        + dataDetails?.administrationOutcomes?.sum_commission_tax_amount;\n\n\n    return (\n        <MyModal\n            title={\n                <>\n                    <ModalTitle>\n                        <Row>\n                            Detalle transferencia {date}\n                        </Row>\n                        <Row >\n                            {/* <Button type=\"link\">\n                                    <Row gutter={8}>\n                                    <Col>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                            <defs>\n                                                <clipPath id=\"clip-path\">\n                                                    <rect id=\"Rectangle_1215\" dataName=\"Rectangle 1215\" width=\"24\" height=\"24\" fill=\"#fff\" />\n                                                </clipPath>\n                                            </defs>\n                                            <g id=\"Group_1966\" dataName=\"Group 1966\" clipPth=\"url(#clip-path)\">\n                                                <path id=\"Path_1162\" dataName=\"Path 1162\" d=\"M8.571,17.819l4,4,4-4\" transform=\"translate(-0.571 -0.818)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\n                                                <path id=\"Path_1163\" dataName=\"Path 1163\" d=\"M12.571,12.818v9\" transform=\"translate(-0.571 -0.818)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\n                                                <path id=\"Path_1164\" dataName=\"Path 1164\" d=\"M21.451,18.909a5,5,0,0,0-2.88-9.09h-1.26a8,8,0,1,0-13.74,7.29\" transform=\"translate(-0.571 -0.818)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\n                                            </g>\n                                        </svg>\n                                    </Col>\n                                    <Col className='downloadLink'>\n                                        Descargar\n                                    </Col>\n                                    </Row>\n                                </Button> */}\n                            <AsyncButton\n                                type=\"primary\"\n                                style={{ background: 'transparent', padding: '0px', boxShadow: 'none !important', marginTop: '14px' }}\n                                onClick={onExportExcelTransferDetails}\n                                icon={\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                        <defs>\n                                            <clipPath id=\"clip-path\">\n                                                <rect id=\"Rectangle_1215\" dataName=\"Rectangle 1215\" width=\"24\" height=\"24\" fill=\"#fff\" />\n                                            </clipPath>\n                                        </defs>\n                                        <g id=\"Group_1966\" dataName=\"Group 1966\" clipPth=\"url(#clip-path)\">\n                                            <path id=\"Path_1162\" dataName=\"Path 1162\" d=\"M8.571,17.819l4,4,4-4\" transform=\"translate(-0.571 -0.818)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\n                                            <path id=\"Path_1163\" dataName=\"Path 1163\" d=\"M12.571,12.818v9\" transform=\"translate(-0.571 -0.818)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\n                                            <path id=\"Path_1164\" dataName=\"Path 1164\" d=\"M21.451,18.909a5,5,0,0,0-2.88-9.09h-1.26a8,8,0,1,0-13.74,7.29\" transform=\"translate(-0.571 -0.818)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\n                                        </g>\n                                    </svg>\n\n                                }\n                            >\n                                <span className='textLink'>\n                                    Descargar detalle\n                                </span>\n                            </AsyncButton>\n                        </Row>\n                    </ModalTitle>\n                </>\n            }\n            onCancel={onCancel}\n            visible={visible}\n        >\n            <div style={{ paddingLeft: '20px', paddingRight: '20px' }}>\n                <Row>\n                    <Title3>\n                        Detalles de Ingresos\n                    </Title3>\n                </Row>\n                <Row>\n                    <Text>\n                        Total ingresos recibidos al wallet sin descontar ningún tipo de comisión\n                    </Text>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            Ingresos por {dataDetails?.commissionsAppartaPay?.apparta_pay_count} pagos recibidos Apparta Pay\n                        </Text>\n                    </Col>\n                    <Col>\n                        < Text>\n                            ${numeral(dataDetails?.ConsumptionsAndReservations?.sum_income)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            Ingresos administrativos\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text>\n                            ${numeral(dataDetails?.administrationIncomes?.sum_income)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            Ingreso por descuento subsidiado en {dataDetails?.PercentageSubsidized?.apparta_pay_count} reservas\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text>\n                            ${numeral(dataDetails?.PercentageSubsidized?.sum_income)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Title2 level={5}>\n                            Ingresos Totales\n                        </Title2>\n                    </Col>\n                    <Col>\n                        <Title2 level={5}>\n                            ${numeral(totalIngresos)?.format('0,0')}\n                        </Title2>\n                    </Col>\n                </Row>\n                <Divider style={{ background: '#707070' }} />\n                <Row>\n                    <Title3>\n                        Detalles de Egresos\n                    </Title3>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            Comisiones por {dataDetails?.commissionsReservations?.reservations_count} reservas y {dataDetails?.commissionsReservations?.reservations_persons} comensales\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text>\n                            ${numeral(dataDetails?.commissionsReservations?.sum_commission_total_amount_tax_excl)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            Comisiones por {dataDetails?.commissionsAppartaPay?.apparta_pay_count} pagos recibidos por Apparta Pay\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text >\n                            ${numeral(dataDetails?.commissionsAppartaPay?.sum_commission_total_amount_tax_excl)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            Comisiones por {dataDetails?.PercentageSubsidized?.apparta_pay_count} reservas con descuentos subsidiados\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text >\n                            ${numeral(dataDetails?.PercentageSubsidized?.sum_commission_total_amount_tax_incl)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            Egreso por administración\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text>\n                            ${numeral(dataDetails?.administrationOutcomes?.sum_amount)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Title2 >\n                            Egresos Totales (sin IVA)\n                        </Title2>\n                    </Col>\n                    <Col>\n                        <Title2>\n                            ${numeral(totalEgresos)?.format('0,0')}\n                        </Title2>\n                    </Col>\n                </Row>\n                <Divider style={{ background: '#707070' }} />\n                <Row>\n                    <Title3>\n                        Detalles de Impuestos\n                    </Title3>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            IVA a comisiones por Reserva\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text>\n                            ${numeral(dataDetails?.commissionsReservations?.sum_commission_tax_amount)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            IVA a comisiones por Apparta Pay\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text>\n                            ${numeral(dataDetails?.commissionsAppartaPay?.sum_commission_tax_amount)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Text>\n                            IVA a egreso por administración\n                        </Text>\n                    </Col>\n                    <Col>\n                        <Text>\n                            ${numeral(dataDetails?.administrationOutcomes?.sum_commission_tax_amount)?.format('0,0')}\n                        </Text>\n                    </Col>\n                </Row>\n                <Row justify='space-between'>\n                    <Col>\n                        <Title2 >\n                            Impuestos Totales\n                        </Title2>\n                    </Col>\n                    <Col>\n                        <Title2>\n                            ${numeral(totalIva)?.format('0,0')}\n                        </Title2>\n                    </Col>\n                </Row>\n                <Divider style={{ background: '#707070' }} />\n                <Row justify='space-between'>\n                    <Col>\n                        <Title1Purple>\n                            Total Transferido\n                        </Title1Purple>\n                    </Col>\n                    <Col>\n                        <Title1Purple>\n                            ${numeral(totalIngresos - totalEgresos - totalIva)?.format('0,0')}\n                        </Title1Purple>\n                    </Col>\n                </Row>\n                {/* <Row>\n                <AsyncButton\n                    type=\"primary\"\n                    style={{ borderRadius: '0.5rem' }}\n                    onClick={onExportExcelTransferDetails}\n                    icon={<HiOutlineDocumentDownload />}\n                >\n                    Descargar Detalle\n                </AsyncButton>\n            </Row> */}\n                <Divider style={{ background: 'transparent', borderTop: 0, }} />\n            </div>\n        </MyModal>\n    )\n};\n\nexport default TransferDetails;","import React, { useState } from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Button, Col, DatePicker, Divider, Layout, message, Row, Typography } from 'antd';\nimport { BsCreditCard2Front } from 'react-icons/bs';\nimport { Grid } from '../../components/com';\nimport { useSelector } from 'react-redux';\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport TransferDetails from './TransferDetails';\nimport { Box } from '../../components';\nimport AsyncButton from '../../components/asyncButton';\nimport _ from 'lodash';\nimport { getService } from '../../services';\n\nconst { RangePicker } = DatePicker;\n\nconst columns = (setPaymentDetails) => [\n    {\n        title: \"N°\",\n        dataIndex: \"id\",\n        sorter: true,\n    },\n    {\n        title: \"Restaurante\",\n        sorter: true,\n        render: (record) => {\n            return (\n                <span style={{ width: '100%', display: 'inline-block' }}>\n                    {record?.pay_account?.establishment?.name} - {record?.pay_account?.establishment_branch?.address}\n                </span>\n            );\n        },\n    },\n    {\n        title: \"Monto\",\n        dataIndex: 'amount',\n        sorter: true,\n        render: (record) => {\n            return (\n                <span style={{ width: '100%', display: 'inline-block' }}>\n                    ${numeral(record).format('0,0')}\n                </span>\n            );\n        },\n    },\n    {\n        title: \"Fecha\",\n        dataIndex: 'status_date_completed',\n        sorter: true,\n        render: (record) => {\n            return (\n                <span style={{ width: '100%', display: 'inline-block' }}>\n                    {moment(record).format('DD/MM/YYYY h:mm a')}\n                </span>\n            );\n        },\n    },\n    {\n        title: \"Estado\",\n        dataIndex: 'status',\n        sorter: true,\n    },\n    {\n        title: \"Acciones\",\n        dataIndex: 'id',\n        render: (id, { status_date_completed }) => {\n            return (\n                <>\n                    {\n                        moment(moment(status_date_completed).format('YYYY-MM-DD')).isAfter(moment('2022-06-02')) ? (\n                            <Button\n                                type=\"link\"\n                                onClick={() => { setPaymentDetails({ id, date: status_date_completed ? moment(status_date_completed)?.format('DD/MM/YYYY h:mm a') : '' }) }}\n                            >\n                                ver detalles\n                            </Button>\n                        ) : (\n                            <> Detalles no disponibles</>\n                        )\n                    }\n                </>\n            );\n        },\n        align: \"center\",\n    },\n];\n\nconst Transfer = () => {\n\n    const [selectedDate, setSelectedDate] = useState([]);\n    const [paymentDetailsId, setPaymentDetailsId] = useState();\n    const establishmentFilters = useSelector(({ dashboardReducer }) => dashboardReducer.establishmentFilters);\n\n    const handleChange = (rangeDates) => {\n        try {\n            if (rangeDates)\n                setSelectedDate([\n                    moment(rangeDates[0]).startOf('day').utc().format('YYYY-MM-DD HH:mm:ss'),\n                    moment(rangeDates[1]).endOf('day').utc().format('YYYY-MM-DD HH:mm:ss')\n                ]);\n            else\n                setSelectedDate([]);\n        } catch (err) {\n            message.error(err.message);\n        }\n    };\n\n    const onExportExcelTransferDetails = async () => {\n        if (_.isEmpty(selectedDate)) {\n            message.info('Selecciona el rango de fechas a exportar!')\n            return;\n        }\n        const reportIncomeExoensesService = getService('report-income-expenses');\n        await reportIncomeExoensesService.find({\n            query: {\n                $client: { generateExcelWithDetails: true },\n                establishment_id: establishmentFilters.establishment_id,\n                establishment_branch_id: establishmentFilters.establishment_branch_id,\n                date_end: selectedDate[1],\n                date_start: selectedDate[0],\n            }\n        })\n            .then((response) => window.open(response.path, '_blank'))\n            .catch((error) => message.error(error.message || 'No se pudo exportar los registros!'))\n    };\n\n    return (\n        <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n            <Row>\n                <Row\n                    align='middle'\n                    gutter={[16, 16]}\n                    style={{\n                        color: \"var(--purple)\",\n                    }}\n                >\n                    <Col>\n                        <BsCreditCard2Front size={30} />\n                    </Col>\n                    <Col>\n                        <Typography.Title level={3} style={{ margin: 0 }}>\n                            Transferencias\n                        </Typography.Title>\n                    </Col>\n                </Row>\n            </Row>\n            <Divider style={{ background: 'transparent', borderTop: 0, marginTop: 0 }} />\n            <Row>\n                <Col span={24}>\n                    {\n                        !establishmentFilters?.establishment_id ? (\n                            <Box>\n                                *Selecciona un restaurante para ver los registros*\n                            </Box>\n                        ) : (\n                            <Grid\n                                filterDefaultValues={{\n                                    meta_establishment_id: establishmentFilters.establishment_id,\n                                    meta_establishment_branch_id: establishmentFilters.establishment_branch_id,\n                                    status: 'completed',\n                                    type: 'bank',\n                                    $sort: {\n                                        status_date_completed: -1,\n                                    },\n                                    $and: [\n                                        { status_date_completed: { $lte: selectedDate[1] } },\n                                        { status_date_completed: { $gte: selectedDate[0] } },\n                                    ],\n                                }}\n                                custom={true}\n                                columns={columns(setPaymentDetailsId)}\n                                source={'pay-withdrawal'}\n                                permitFetch={!!(establishmentFilters.establishment_id)}\n                                actions={{}}\n                                title={\n                                    <Row gutter={16} align=\"middle\">\n                                        <Col>\n                                            <RangePicker\n                                                locale={locale}\n                                                format='YYYY-MM-DD'\n                                                onChange={(rangeDates) => handleChange(rangeDates)}\n                                            />\n                                        </Col>\n                                        <Col>\n                                            <AsyncButton\n                                                type=\"primary\"\n                                                style={{ borderRadius: '0.5rem' }}\n                                                onClick={onExportExcelTransferDetails}\n                                            >\n                                                Exportar Excel\n                                            </AsyncButton>\n                                        </Col>\n                                    </Row>\n                                }\n                            />\n                        )\n\n                    }\n\n                </Col>\n            </Row>\n            {\n                paymentDetailsId && (\n                    <TransferDetails\n                        onCancel={() => {\n                            setPaymentDetailsId(undefined);\n                        }}\n                        visible={!!paymentDetailsId}\n                        id={paymentDetailsId?.id}\n                        date={paymentDetailsId?.date}\n                        establishment_id={establishmentFilters?.establishment_id}\n                    />\n                )\n            }\n        </Layout.Content>\n    );\n}\nexport default Transfer; ","import { Row, Tabs } from 'antd';\nimport styled from 'styled-components';\n\nexport const HeadLine = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: baseline;\n  flex-wrap: wrap;\n\n  width:100%!important;\n\n  background-color:var(--gray-dark-1)!important;\n  color:#fff!important;\n\n  & .ant-checkbox-wrapper{\n    margin:0px 10px;\n  }\n  & h2{\n    color: #fff!important;\n    text-transform: uppercase!important;\n    padding: 4px 10px!important;\n    font-size: 16px!important;\n    vertical-align: middle!important;\n    margin-bottom: 0px!important;\n  }\n`;\nexport const AvatarWrapper = styled.div`\n\n    position:relative;\n   \n    display: flex;\n    justify-content: start;\n    align-items: center;\n\n    & .container{\n      width: 34px;\n      position:relative;\n    }\n    & .container:hover .ant-btn{\n      display:inline-block;\n    }\n    & .ant-btn,.ant-btn:hover{\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 999;\n      height: 34px!important;\n      display: none;\n      width: 34px!important;\n      background: #0010214f!important;\n      color: #FFF!important;\n      font-weight: bold;\n      display:none;\n    }\n`;\n\nexport const Tools = styled.div`\n    display:flex;\n    justify-content: space-between;\n`;\nexport const Box = styled(Row)`\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n  border-radius:1rem;\n  background: #fff ;\n  padding: 2rem;\n`;\nexport const TabsStyled = styled(Tabs)`\n    & .ant-tabs-nav{\n        background-color:white;\n        border-radius:1rem;\n        box-shadow: rgb(0 0 0 / 10%) 0px 4px 12px;\n        padding:0 1rem;\n    }\n`;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Row, Col, Button, Typography } from 'antd';\nimport {\n    ReflexElement\n} from 'react-reflex'\nimport 'react-reflex/styles.css'\n\nclass ControlledElement extends React.Component {\n\n    constructor() {\n\n        super()\n\n        this.onMinimizeClicked =\n            this.onMinimizeClicked.bind(this)\n\n        this.onMaximizeClicked =\n            this.onMaximizeClicked.bind(this)\n\n        this.state = {\n            size: -1,\n        }\n    }\n\n    onMinimizeClicked() {\n\n        const currentSize = this.getSize()\n\n        const update = (size) => {\n\n            return new Promise((resolve) => {\n\n                this.setState({\n                    size: size < 50 ? 50 : size\n                }, () => resolve())\n            })\n        }\n\n        const done = (from, to) => {\n\n            return from < to\n        }\n\n        this.animate(\n            currentSize, 50, -50,\n            done, update)\n\n        this.setState({\n            ...this.state,\n        })\n    }\n\n    onMaximizeClicked() {\n\n        const currentSize = this.getSize()\n\n        const update = (size) => {\n\n            return new Promise((resolve) => {\n\n                this.setState({\n                    size\n                }, () => resolve())\n            })\n        }\n\n        const done = (from, to) => {\n\n            return from > to\n        }\n\n        this.animate(\n            currentSize, 300, 50,\n            done, update)\n\n\n    }\n\n    getSize() {\n\n        const domElement = ReactDOM.findDOMNode(this)\n\n        switch (this.props.orientation) {\n\n            case 'horizontal':\n                return domElement.offsetHeight\n\n            case 'vertical':\n                return domElement.offsetWidth\n\n            default:\n                return 0\n        }\n    }\n\n    animate(start, end, step, done, fn) {\n\n        const stepFn = () => {\n\n            if (!done(start, end)) {\n\n                fn(start += step).then(() => {\n                    requestAnimationFrame(stepFn)\n                })\n            }\n        }\n\n        stepFn()\n    }\n\n\n\n    render() {\n\n        return (\n            <ReflexElement size={this.state.size} {...this.props}>\n                <Row\n                    style={{\n                        position: 'fixed',\n                        zIndex: 1,\n                        width: '100%'\n                    }}>\n                    <Col xs={24} sm={24} md={12} lg={9} xl={7}>\n                        <Row\n                            type='flex'\n                            align='middle'\n                            justify=\"space-between\"\n                            style={{\n                                height: 50,\n                                width: '100%',\n                                fontSize: '1.2em',\n                                background: \" #fafafa\",\n                                borderBottom: \"1px solid #d9d9d9\",\n                                borderRight: \"1px solid #d9d9d9\",\n                                borderTop: \"1px solid #d9d9d9\",\n                                padding: \"0px 10px\",\n                            }}\n                        >\n                            <Col flex='auto' style={{ overflow: 'hidden' }} >\n                                <Row\n                                    align=\"middle\"\n                                >\n                                    <Typography.Title\n                                        level={5}\n                                        style={{ margin: 0 }}\n                                    >\n                                        {this.props.title}\n                                    </Typography.Title>\n                                </Row>\n                            </Col>\n                            <Col flex='none'>\n                                < Row\n                                    type='flex'\n                                    align='middle'\n                                    gutter={16}\n                                >\n                                    <Col>\n                                        {this.props.counter}\n                                    </Col>\n                                    <Col>\n                                        <Button\n                                            type=\"text\"\n                                            shape=\"circle\"\n                                            onClick={this.onMinimizeClicked}\n                                        >\n                                            <Typography.Title level={5}>\n                                                -\n                                            </Typography.Title>\n                                        </Button>\n                                        <Button\n                                            type=\"text\"\n                                            shape=\"circle\"\n                                            onClick={this.onMaximizeClicked}\n                                        >\n                                            <Typography.Title level={5}>\n                                                +\n                                            </Typography.Title>\n                                        </Button>\n                                    </Col>\n                                </Row >\n                            </Col>\n                        </Row >\n                    </Col>\n                </Row>\n                <div\n                    style={{\n                        paddingTop: 50,\n                    }}>\n                    {this.props.children}\n                </div>\n            </ReflexElement>\n        )\n    }\n}\n\n\nexport default ControlledElement;","import React, { useState, useEffect } from \"react\";\nimport { SelectField, SimpleForm, DateField, FileUploader } from \"../com/form/\";\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport {\n  Icon,\n  Input,\n  Select,\n  message,\n  DatePicker,\n  Layout,\n  Row\n} from \"antd\";\nimport { ImageField } from \"../com\";\nimport { useNavigate } from \"react-router-dom\";\nimport qs from \"qs\";\n\nimport { getService } from '../../services';\n\nconst { Option } = Select;\n\nconst roles = [\n  {\n    id: \"user\",\n    name: \"Usuario\",\n  },\n  {\n    id: \"admin\",\n    name: \"Administrador\",\n  },\n];\n\nconst status = [\n  {\n    id: \"active\",\n    name: \"Activo\",\n  },\n  {\n    id: \"disabled\",\n    name: \"Desactivado\",\n  },\n  {\n    id: \"pending validation\",\n    name: \"Pendiente de validación\",\n  },\n  {\n    id: \"pending_information\",\n    name: \"Pendiente por información\",\n  },\n];\nconst genders = [\n  {\n    id: \"male\",\n    name: \"Masculino\",\n  },\n  {\n    id: \"female\",\n    name: \"Femenino\",\n  },\n];\n\nexport const codepush_environment_options = [\n  { id: \"production\", name: \"production\" },\n  { id: \"staging\", name: \"staging\" },\n];\n\nexport const true_false = [\n  { id: \"false\", name: \"False\" },\n  { id: \"true\", name: \"True\" },\n];\n\nconst exclude_admin_roles = [\"admin\"];\n\nconst UserForm = ({ source, id, ...props }) => {\n  const navigate = useNavigate();\n  \n  const [role, setRole] = useState();\n\n  const handleUploadFinish = (field, url, file, _id) => {\n    const service = getService(\"users\");\n    const galleryService = getService(\"gallery\");\n    let payloads = {\n      meta_file_name: file.name,\n      meta_size: String(file.size),\n      name: file.name,\n      meta_media_type: file.type,\n      path: url,\n      description: \"\",\n    };\n    galleryService\n      .create(payloads)\n      .then(({ id }) => {\n        if (_id !== \"create\")\n          service\n            .patch(_id, {\n              [field]: id,\n            })\n            .then((response) => { })\n            .catch((err) => message.error(err.message));\n      })\n      .catch((err) => message.error(err.message));\n  };\n\n  useEffect(() => {\n    if (props.location) {\n      let { search } = props.location;\n      let query = qs.parse(search.replace(/\\?/, \"\"));\n      if (query) {\n        let { role } = query;\n        setRole(role);\n      }\n    }\n  }, [props.location]);\n\n  return (\n    <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n      <Row style={{ padding: '2rem', background: 'white', borderRadius: '0.5rem' }}>\n        <SimpleForm\n          id={id}\n          source={source || \"users\"}\n          onSubmit={() => {\n            navigate(`/dashboard/management/users`);\n          }}\n          textAcceptButton={id ? \"ACTUALIZAR\" : \"CREAR\"}\n        >\n          {id && (\n            <FileUploader\n              flex={1}\n              path={`users/${id}/avatar/`}\n              name='avatar_gallery'\n              source='avatar_gallery'\n              onFinish={(url, file) =>\n                handleUploadFinish(\"avatar_gallery_id\", url, file, id)\n              }\n            />\n          )}\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Nombre\"\n            label=\"Nombre\"\n            name=\"first_name\"\n            validations={[{ required: true, message: \"El nombre es requerido\" }]}\n          />\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Apellido\"\n            label=\"Apellido\"\n            name=\"last_name\"\n            validations={[{ required: true, message: \"El apellido es requerido\" }]}\n          />\n          <Input\n            size=\"large\"\n            flex={0.5}\n            placeholder=\"Email\"\n            label=\"Correo\"\n            type=\"email\"\n            name=\"email\"\n            validations={[{ required: true, message: \"El email es requerido\" }]}\n          // prefix={<Icon size=\"large\" type=\"mail\" />}\n          />\n          <Input.Password\n            size=\"large\"\n            flex={0.5}\n            type=\"password\"\n            // prefix={<Icon size=\"large\" type=\"lock\" />}\n            placeholder=\"●●●●●●●●\"\n            label=\"Contraseña\"\n            name=\"password\"\n            validations={[\n              !id && { required: true, message: \"La contraseña es requerida\" },\n            ]}\n          />\n          <Select\n            size=\"large\"\n            name=\"gender\"\n            label=\"Genero\"\n            placeholder=\"Seleccionar\"\n          >\n            {genders\n              .map((d) => (\n                <Option key={d.id} >{d.name}</Option>\n              ))}\n          </Select>\n          {!id &&\n            <DatePicker\n              xtype=\"date\"\n              size=\"large\"\n              label=\"Fecha de nacimiento\"\n              name=\"birthday\"\n              format=\"MM/DD/YYYY\"\n              locale={locale}\n            />\n          }\n          <Input\n            xtype=\"phone\"\n            input\n            size=\"large\"\n            flex={0.1}\n            placeholder=\"Ej: 57\"\n            label=\"Código del País\"\n            name=\"phone_country_code\"\n            // prefix={<Icon size=\"large\" type=\"phone\" />}\n            validations={[\n              { required: true, message: \"El código del país es requerido\" },\n            ]}\n          />\n          <Input\n            xtype=\"phone\"\n            input\n            size=\"large\"\n            flex={0.2}\n            placeholder=\"Celular\"\n            label=\"Celular\"\n            type=\"tel\"\n            name=\"phone\"\n            // prefix={<Icon size=\"large\" type=\"phone\" />}\n            validations={[\n              { required: true, message: \"El teléfono celular es requerido\" },\n            ]}\n          />(\n          <Select\n            size=\"large\"\n            label=\"Elige un rol para el usuario\"\n            name=\"role\"\n            placeholder=\"Elige un rol para el usuario\"\n            validations={[{ required: true, message: \"El estado es requerido\" }]}\n          >\n            {\n              roles.map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))\n            }\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"status\"\n            label=\"Estado\"\n            placeholder=\"Seleccionar\"\n            validations={[{ required: true, message: \"El estado es requerido\" }]}\n          >\n            {status\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"account_manager\"\n            label=\"Account manager\"\n            placeholder=\"Seleccionar\"\n          >\n            {true_false\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"test_user\"\n            label=\"Test User\"\n            placeholder=\"Seleccionar\"\n          >\n            {true_false\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Select\n            size=\"large\"\n            name=\"codepush_enviorment\"\n            label=\"Code Push Environment\"\n            placeholder=\"Seleccionar\"\n          >\n            {codepush_environment_options\n              .map((d) => (\n                <Option key={d.id}>{d.name}</Option>\n              ))}\n          </Select>\n          <Input.TextArea\n            flex={1}\n            name='disabled_reason'\n            label=\"Disabled Reason\"\n            size=\"large\"\n            autoSize\n          />\n        </SimpleForm>\n      </Row>\n    </Layout.Content>\n  );\n};\nexport default UserForm;\n","import styled from 'styled-components';\nimport { Modal } from 'antd';\n\nexport const Wrapper = styled(Modal)`\n    ${\n    ({ transparent }) => {\n        if (transparent)\n            return `\n                & .ant-modal-content, .ant-modal-header {\n                    background-color: transparent!important;\n                    box-shadow: none!important;\n                }\n                & .ant-modal-header {\n                    border-bottom: 0px!important;\n                }\n                & .ant-modal-body {\n                    height: 85vh!important;\n                    padding-top: 50px!important;\n                }\n                & .ant-modal-footer {\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    color: #FFF!important;\n                    border-top: 0px!important;\n                }\n                & .ant-list-item-meta-title{\n                    color: rgb(255 255 255);\n                    text-align:left;\n                }\n                & .ant-btn-link, .ant-btn-link:hover, .ant-btn-link:focus{\n                    color: rgb(255 255 255)!important;\n                }\n                & .ant-list-item-meta-description {\n                    color: rgb(255 255 255 / 90%);\n                }\n                & .ant-modal-close-x {\n                    font-size: 24px;\n                    color: #bbb;\n                }\n            `;\n    }\n    }\n`;","import React, { useState, useEffect } from 'react';\nimport { Modal } from 'antd';\nimport { Wrapper } from \"./Styles\"\nconst ModalView = ({ children, onCancel, visible, ...props }) => {\n    const [open, setOpen] = useState(visible || false);\n    useEffect(() => {\n        setOpen(visible);\n    }, [visible]);\n    return (<>\n        <Wrapper\n            onCancel={() => {\n                setOpen(false);\n                if (onCancel)\n                    onCancel()\n            }}\n            visible={open}\n            {...props}>\n            {children}\n        </Wrapper>\n    </>)\n}\n\nexport default ModalView;","import React from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: start;\n    align-items: baseline;\n    flex-wrap: wrap;\n    /* background-color:var(--gray-dark-1)!important; */\n    color: var(--gray-dark-1)!important;\n    & .ant-checkbox-wrapper{\n        margin:0px 10px;\n    }\n    & h2{\n        color: var(--antd-wave-shadow-color);\n        padding: 4px 10px!important;\n        font-size: 18px!important;\n        font-weight: bold;\n        vertical-align: middle!important;\n        margin-bottom: 0px!important;\n    }\n`;\nconst WrapperHeadLine = (props) => (<Wrapper>{props.children}</Wrapper>);\nexport default WrapperHeadLine;"],"sourceRoot":""}