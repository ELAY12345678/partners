{"version":3,"sources":["layouts/layout_center.js","components/authentication/Styled.js","sources/images/Logo_Apparta-01.png","components/authentication/SignInForm.js","views/authentication/signin/SignIn.js","components/com/form/Styles.js","components/com/form/AdvancedForm.js"],"names":["Content","_Layout","Container","styled","div","_templateObject","_taggedTemplateLiteral","LayoutCanter","_ref","children","_objectWithoutProperties","_excluded","_jsx","style","minHeight","background","Form","WrappedAdvancedForm","_templateObject2","Footer","_Row","_templateObject3","connect","state","user","dispatch","onAuthentication","type","actionTypes","props","navigate","useNavigate","form","_Form","useForm","useEffect","onSubmit","handleSubmit","err","data","authenticate","then","_ref2","accessToken","window","localStorage","setItem","JSON","stringify","strategy","rest","socket","_objectSpread","role","catch","_message","error","layout","autoSubmit","textAcceptButton","footer","justify","align","_Col","span","_Button","block","size","width","height","padding","margin","textAlign","htmlType","className","_jsxs","_Fragment","_Input","placeholder","name","validations","required","message","prefix","_Icon","color","Password","autoComplete","SignIn","token","getService","create","success","info","validateToken","LayoutCenter","SignInForm","WrapperSelect","display","concat","Tools","HeadTitle","AdvancedForm","Component","constructor","super","formRef","React","createRef","handleFormatterPhone","value","match","replace","async","this","e","path_image_main","banner_path","apparta_menu_branch_list_background_path","undefined","expand","formLayout","getFields","me","initialValues","childrens","formItemLayout","labelCol","wrapperCol","childNodes","Children","map","child","index","label","labelAlign","help","initial","initialValue","valuePropName","onChange","xtype","next_reference","flex","format","mode","feedback","onRender","latName","lngName","moment","Number","allRequired","filter","it","validator","length","push","rule","callback","getFieldValue","pattern","RegExp","test","Error","_createElement","key","Item","enableReinitialize","hasFeedback","validateTrigger","rules","cloneElement","trigger","onBlur","target","setFieldsValue","capitalize","console","log","componentDidMount","setState","onMount","current","_this$props$form","componentWillReceiveProps","nexProps","_this$formRef$current","render","title","titleStyle","actions","noAcceptButtonBlock","scrollToFirstError","onFinish","onFieldsChange","field","allFields","gutter","disabled","loading","submitting","borderRadius","marginBottom","onClick","ref"],"mappings":"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","file":"static/js/39.42616c2a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Layout, Row, Col } from \"antd\";\nimport styled from \"styled-components\";\n\nconst { Content } = Layout;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LayoutCanter = ({ children, ...props }) => {\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Layout>\n        <Content\n          style={{\n            background: \"var(--primary)\"\n          }}\n        >\n          <Container>{children}</Container>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default LayoutCanter;\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\nimport WrappedAdvancedForm from \"../com/form/AdvancedForm\";\n\nexport const HeadLine = styled.div`\n  text-align: center;\n\n  & h2 {\n    font-size: 1.5rem;\n  }\n  & img {\n    margin-bottom: 1.5rem !important;\n  }\n`;\n\nexport const Form = styled(WrappedAdvancedForm)`\n  width: 400px;\n  background: #fff;\n  padding: 40px 35px !important;\n  border: 1px solid #ccc;\n\n  box-shadow: 0 2px 10px -1px rgba(69, 90, 100, 0.3);\n  margin-bottom: 30px;\n  transition: box-shadow 0.2s ease-in-out;\n\n  border: 0px solid rgba(0, 0, 0, 0.125);\n  border-radius: 0.25rem;\n\n  & .item-form {\n    padding: 5px 20px !important;\n  }\n  & .ant-form-item input:focus {\n    box-shadow: none !important;\n  }\n  & .ant-form-item {\n    padding-bottom: 5px !important;\n    margin-bottom: 5px !important;\n  }\n  & .ant-form-item input {\n    border: 0px;\n    border-radius: 0px;\n    padding: 0.625rem 1.1875rem;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n  & .login-form-button {\n    text-transform: uppercase;\n    font-weight: bold;\n\n    margin-bottom: 1.5rem !important;\n\n    border: 1px solid transparent !important;\n    padding: 0.625rem 1.1875rem !important;\n    font-size: 0.875rem !important;\n    line-height: 1.5 !important;\n    border-radius: 2px !important;\n  }\n`;\n\nexport const Footer = styled(Row)`\n  & .ant-col {\n    margin-bottom: 0.5rem !important;\n  }\n`;","export default __webpack_public_path__ + \"static/media/Logo_Apparta-01.f4482361.png\";","import React, { useEffect } from \"react\";\nimport { Input, Button, Icon, Row, Col, message, Form as FormAnt } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { socket } from \"../../api/\";\n\n/* Redux */\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../redux/app/actions\";\n\n/* Services */\nimport { authenticate } from \"../../services/services\";\n\nimport { Form, HeadLine, Footer } from './Styled';\n\nimport LogoApparta from \"../../sources/images/Logo_Apparta-01.png\";\n\n\nconst SignInForm = props => {\n  const navigate = useNavigate();\n  const [form] = FormAnt.useForm();\n\n  const connect = ({ strategy = \"jwt\", accessToken, ...rest }) => {\n    return socket.authenticate({\n      strategy,\n      accessToken,\n      ...rest\n    });\n  };\n  useEffect(() => {\n    // console.log(\"Changed!\", props);\n    return () => { };\n  }, [props]);\n\n  const handleSubmit = (err, data) => {\n    authenticate(data)\n      .then(({ user, accessToken }) => {\n        window.localStorage.setItem(\"feathers-jwt\", accessToken);\n        window.localStorage.setItem(\"user\", JSON.stringify(user));\n        /* Socket Authentication */\n        connect({\n          accessToken\n        });\n\n        props.onAuthentication(user);\n        if (user.role === \"admin\")\n          navigate(\"/dashboard\");\n        else\n          navigate(\"/dashboard\");\n        if (props.onSubmit) props.onSubmit(err, data);\n      })\n      .catch(err => message.error(\"Email or Password Invalid!\"));\n  };\n\n  return (\n    <Form\n      form={form}\n      onSubmit={handleSubmit}\n      layout={\"vertical\"}\n      autoSubmit={false}\n      textAcceptButton=\"Ingresar\"\n      footer={\n        <Footer type=\"flex\" justify=\"center\" align=\"middle\" style={{ background: 'red' }}>\n          <Col span={24} style={{ background: 'red' }}>\n            <Button\n              block\n              size=\"large\"\n              style={{\n                width: \"100%\",\n                height: 40,\n                padding: 5,\n                margin: \"0px auto\",\n                textAlign: \"center\"\n              }}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Ingresar\n            </Button>\n          </Col>\n        </Footer>\n      }\n    >\n      <>\n        {/* <HeadLine\n          style={{\n            width: \"100%\",\n            height: \"150px\"\n          }}\n        >\n          <img\n            src={LogoApparta}\n            style={{\n              height: \"145px\",\n              width: 250,\n              objectFit: 'cover'\n            }}\n            alt='logo apparta'\n          />\n        </HeadLine> */}\n        <Input\n          size=\"small\"\n          style={{ width: \"100%\" }}\n          placeholder=\"Email Address\"\n          name=\"email\"\n          validations={[{ required: true, message: \"Email is required\" }]}\n          prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        />\n        <Input.Password\n          size=\"small\"\n          style={{ width: \"100%\" }}\n          type=\"password\"\n          prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          placeholder=\"Password\"\n          name=\"password\"\n          validations={[{ required: true, message: \"Password is required\" }]}\n          autoComplete={'off'}\n        />\n      </>\n    </Form>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthentication: user =>\n      dispatch({ type: actionTypes.AUTHENTICATION, user })\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInForm);\n","import React, { useEffect } from \"react\";\n// import SignInForm from \"../../../components/authentication/SignInForm\";\nimport LayoutCenter from \"../../../layouts/layout_center\";\nimport { message } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { getService } from \"../../../services/services\";\nimport {SignInForm} from \"../../../components/authentication\";\nconst SignIn = ({ token, ...props }) => {\n  const navigate = useNavigate();\n  \n  const validateToken = token => {\n    let service = getService(\"user-confirmation\");\n    service\n      .create({\n        token\n      })\n      .then(({ success }) => {\n        message.info(\"Use your user and password to access!\");\n        navigate(\"/signin\");\n      })\n      .catch(err => message.error(err.message));\n  };\n  useEffect(() => {\n    if (token) validateToken(token);\n    return () => {};\n  }, []);\n  return (\n    <LayoutCenter>\n      <SignInForm />\n    </LayoutCenter>\n  );\n};\n\nexport default SignIn;\n","import styled from \"styled-components\";\n\nexport const WrapperSelect = styled.div`\n    ${({ display }) => {\n        return `display:${display}`;\n    }}\n    align-items:center;\n  \n    & .container-button-plus{\n        margin-left: 10px;\n    }\n`;\n\nexport const Tools = styled.div`\n  display: flex;\n  & .ant-btn {\n    margin: 0px 4px;\n  }\n`;\nexport const HeadTitle = styled.div`\n  h2 {\n    font-size: 24px !important;\n    font-style: italic !important;\n    text-align: center !important;\n    color: #ccc !important;\n  }\n`;","import React, { Component } from \"react\";\nimport { Form, Row, Col, Button } from \"antd\";\nimport \"./form.css\";\nimport moment from \"moment\";\nimport { Tools, HeadTitle } from './Styles';\n\nclass AdvancedForm extends Component {\n\n  formRef =  React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: false,\n      formLayout: \"vertical\"\n    };\n  }\n\n  handleFormatterPhone = value => {\n    var cleaned = (\"\" + value).replace(/\\D/g, \"\");\n    var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      return \"(\" + match[1] + \") \" + match[2] + \"-\" + match[3];\n    }\n    return null;\n  };\n\n  handleSubmit = async (e) => {\n    if (typeof this.props.onSubmit !== \"undefined\") {\n      if (e.path_image_main)\n        delete e.path_image_main\n      if (e.banner_path)\n        delete e.banner_path\n      if (e.apparta_menu_branch_list_background_path)\n        delete e.apparta_menu_branch_list_background_path\n      this.props.onSubmit(undefined, e, this.props.form, e);\n    }\n  };\n\n  getFields() {\n    const me = this;\n    const { children, initialValues } = this.props;\n    let childrens = [];\n\n    let { formLayout } = this.state;\n    formLayout = this.props.formLayout || formLayout;\n\n    const formItemLayout =\n      formLayout === \"vertical\"\n        ? {\n          labelCol: {\n            span: 4,\n          },\n          wrapperCol: {\n            span: 14,\n          },\n        }\n        : null;\n\n    if (typeof children !== \"undefined\") {\n      try {\n        let { props } = children;\n        let childNodes = props.children || [];\n        childrens = React.Children.map(childNodes, (child, index) => {\n          if (!child) return child;\n          let {\n            name,\n            label,\n            labelAlign,\n            help,\n            required,\n            message,\n            validations,\n            style,\n            initial,\n            initialValue,\n            valuePropName=\"value\",\n            onChange,\n            type,\n            xtype,\n            next_reference,\n            flex,\n            className,\n            format,\n            mode,\n            feedback = false,\n            onRender\n          } = child.props;\n\n          name = typeof name === \"undefined\" ? `field_${index}` : name;\n\n          style = style || {};\n\n          /* InitialValue Map */\n          let { latName = \"lat\", lngName = \"lng\" } = child.props;\n          let { form } = me.props;\n          if (xtype === \"map\") {\n            // initialValue = Object.values(values);\n          }\n\n          if (initialValues) initialValue = initialValues[name];\n\n          if (xtype === \"date\" && initialValues) {\n            if (initialValues[name]) initialValue = moment(initialValues[name]);\n          }\n          if (xtype === \"number\" && initialValues) {\n            if (initialValues[name]) initialValue = Number(initialValues[name]);\n          }\n          validations = validations || [\n            {\n              required: required || this.props.allRequired || false,\n              message: message || `${label} es requerido`\n            }\n          ];\n\n          if (next_reference) {\n            if (validations.filter(it => it.validator).length === 0) {\n              validations.push({\n                validator: (rule, value, callback) => {\n                  if (value && value !== form.getFieldValue(next_reference)) {\n                    callback(\"Two passwords that you enter is inconsistent!\");\n                  } else {\n                    callback();\n                  }\n                }\n              });\n            }\n          }\n          if (type === \"email\") {\n            validations.push({\n              type: \"regexp\",\n              pattern: new RegExp(\n                \"^([a-zd.-]+)@([a-zd-]+).([a-z]{2,8})(.[a-z]{2,8})?$\"\n              ),\n              message: \"Wrong format!\"\n            });\n          }\n          if (xtype === \"password\") {\n            if (validations.filter(it => it.validator).length === 0) {\n              validations.push({\n                validator: async (rule, value) => {\n                  var mediumRegex = new RegExp(\n                    \"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\"\n                  );\n                  if (mediumRegex.test(value)) {\n\n                  } else {\n                    throw new Error(\n                      value\n                        ? \"Badly formed password!!\"\n                        : \"The password is required\"\n                    );\n                  }\n                }\n              });\n            }\n          }\n          if (xtype === \"phone\") {\n          }\n          delete child.value;\n          if (type === \"hidden\") {\n            style = {\n              display: \"none\"\n            };\n          }\n          if (flex <= 1) style[\"width\"] = `${flex * 100}%`;\n          if (!child.type || typeof child == \"undefined\") {\n            return null;\n          }\n          return (\n            <Col\n              {...formItemLayout}\n              key={name || `field-${index}`}\n              style={{ padding: 5, display: \"inline-block\", ...style }}\n              className={`${typeof className !== \"undefined\"\n                ? \"item-form \" + className\n                : \"item-form\"\n                } ${type === \"hidden\" ? \"item-hidden\" : \"\"} ${xtype === \"fieldset\" ? \"field-set\" : \"\"\n                }`}\n            >\n              <Form.Item\n                enableReinitialize\n                label={label}\n                labelAlign={labelAlign || \"right\"}\n                hasFeedback={next_reference != null}\n                help={help}\n                name={name || `field-${index}`}\n                initialValue={initialValue || initial}\n                validateTrigger=\"onChange\"\n                valuePropName={valuePropName}\n                rules={validations}\n              >\n                {\n                  React.cloneElement(child, {\n                    style: { width: \"100%\" },\n                    trigger: \"focus\",\n                    onBlur: e => {\n                      if (xtype === \"capitalize\") {\n                        let value = e.target.value;\n                        form.setFieldsValue({\n                          [name]:\n                            typeof value == \"string\"\n                              ? value.capitalize()\n                              : value\n                        });\n                      }\n                      if (xtype === \"phonefield\") {\n                        let value = e.target.value;\n                        form.setFieldsValue({\n                          [name]:\n                            typeof value == \"string\"\n                              ? this.handleFormatterPhone(value)\n                              : value\n                        });\n                      }\n                    },\n                    form\n                  })\n                }\n              </Form.Item>\n            </Col >\n          );\n        });\n      } catch (err) {\n        console.log(\"ERROR: \", err);\n      }\n    }\n\n    return childrens;\n  }\n\n  componentDidMount() {\n    let { formLayout } = this.props;\n    if (typeof formLayout !== \"undefined\")\n      this.setState({\n        formLayout\n      });\n\n    if (this.props.onMount && this.formRef) this.props.onMount(this.formRef.current);\n\n    let { initialValues } = this.props;\n    if(this.props.form){\n      this.props.form?.setFieldsValue(initialValues)\n    }\n\n  }\n\n  componentWillReceiveProps(nexProps) {\n    let { initialValues } = nexProps;\n    if (!this.props.form && this.formRef && this.formRef.current) {\n      this.formRef.current?.setFieldsValue(initialValues);\n    }\n  }\n\n  render() {\n    const { formLayout } = this.state;\n    let {\n      footer,\n      title,\n      titleStyle,\n      className,\n      style,\n      autoSubmit = true,\n      textAcceptButton = \"SAVE\",\n      initialValues,\n      actions,\n      form,\n      noAcceptButtonBlock = false,\n    } = this.props;\n\n    // if (!this.props.form && this.formRef.current){\n    //   this.formRef.current?.setFieldsValue(initialValues);\n    // }\n\n    if (this.props.form) {\n      return (\n        <Form\n          form={this.props.form}\n          scrollToFirstError\n          name=\"search_form\"\n          className={className}\n          layout={formLayout}\n          onFinish={this.handleSubmit}\n          style={style || { margin: 20 }}\n          // initialValues={initialValues}\n          onFieldsChange={(field,allFields,)=>{\n            if(this.props.onFieldsChange){\n              this.props.onFieldsChange(field,allFields);\n            }\n          }}\n        >\n          {title && <HeadTitle className=\"head-title\">{title}</HeadTitle>}\n          <Row className=\"form-fields\" gutter={24}>\n            {this.getFields()}\n          </Row>\n          <Row justify=\"center\">\n            <Button\n              type=\"primary\"\n              disabled={this.props.disabled}\n              loading={this.props.submitting}\n              size=\"large\"\n              block={noAcceptButtonBlock ? false : true}\n              htmlType=\"submit\"\n              style={{ borderRadius: \"0.5rem\", marginBottom: '1rem' }}\n            >\n              {textAcceptButton}\n            </Button>\n\n          </Row>\n          {actions && (\n            <Tools\n              style={{\n                margin: \"10px 4px\"\n              }}\n            >\n              {actions &&\n                actions.props &&\n                React.Children.map(actions.props.children, (child, index) => {\n                  let { onClick } = child.props;\n                  return React.cloneElement(child, {\n                    onClick: e => {\n                      if (onClick) onClick(e, form);\n                    }\n                  });\n                })}\n            </Tools>\n          )}\n        </Form>\n      )\n    }\n    else {\n      return (\n        <Form\n          ref={this.formRef}\n          scrollToFirstError\n          name=\"search_form\"\n          className={className}\n          layout={formLayout}\n          onFinish={this.handleSubmit}\n          style={style || { margin: 20 }}\n          // initialValues={initialValues}\n        >\n          {title && <HeadTitle className=\"head-title\">{title}</HeadTitle>}\n          <Row className=\"form-fields\" gutter={24}>\n            {this.getFields()}\n          </Row>\n          <Row justify=\"center\">\n            <Button\n              type=\"primary\"\n              disabled={this.props.disabled}\n              loading={this.props.submitting}\n              size=\"large\"\n              block={noAcceptButtonBlock ? false : true}\n              htmlType=\"submit\"\n              style={{ borderRadius: \"0.5rem\", marginBottom: '1rem' }}\n            >\n              {textAcceptButton}\n            </Button>\n\n          </Row>\n          {actions && (\n            <Tools\n              style={{\n                margin: \"10px 4px\"\n              }}\n            >\n              {actions &&\n                actions.props &&\n                React.Children.map(actions.props.children, (child, index) => {\n                  let { onClick } = child.props;\n                  return React.cloneElement(child, {\n                    onClick: e => {\n                      if (onClick) onClick(e, form);\n                    }\n                  });\n                })}\n            </Tools>\n          )}\n        </Form>\n      );\n    }\n\n  }\n}\n\nexport default AdvancedForm;"],"sourceRoot":""}