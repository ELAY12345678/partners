{"version":3,"sources":["views/globalTemplates/index.jsx"],"names":["columns","_ref","onEdit","onRemove","navigate","dataIndex","key","title","sorter","width","render","id","record","_jsxs","_Fragment","children","_jsx","_Button","type","shape","icon","AiOutlineEye","onClick","state","template_id","template_name","name","AiOutlineEdit","AsyncButton","AiOutlineDelete","confirmText","GlobalTemplates","useNavigate","templateService","getService","drawerVisible","setDrawerVisible","useState","selectedTemplate","setSelectedTemplate","updateSource","setUpdateSource","_Layout","Content","style","height","overflow","padding","Grid","source","filterDefaultValues","$sort","async","_ref2","remove","then","_message","success","catch","error","message","actions","extra","RoundedButton","AiOutlinePlus","_Drawer","concat","placement","visible","onClose","SimpleForm","textAcceptButton","initialValues","onSubmit","_Input","initial","flex","size","label","validations","required"],"mappings":"2SAUA,MAAMA,EAAUC,IAAA,IAAC,OAAEC,EAAM,SAAEC,EAAQ,SAAEC,GAAUH,EAAA,MAAK,CAChD,CACII,UAAW,KACXC,IAAK,KACLC,MAAO,KACPC,QAAQ,EACRC,MAAO,KAEX,CACIJ,UAAW,OACXC,IAAK,OACLC,MAAO,SACPC,QAAQ,GAEZ,CACID,MAAO,WACPF,UAAW,KACXC,IAAK,UACLI,OAAQA,CAACC,EAAIC,IACTC,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAAAC,IAAA,CACIC,KAAK,OACLC,MAAM,SACNC,KAAMJ,cAACK,IAAY,IACnBC,QAASA,IAAMlB,EACX,iDACA,CACImB,MAAO,CACHC,YAAab,EACbc,cAAqB,OAANb,QAAM,IAANA,OAAM,EAANA,EAAQc,UAIvCV,cAAAC,IAAA,CACIC,KAAK,OACLI,QAASA,IAAMpB,EAAOU,GACtBQ,KAAMJ,cAACW,IAAa,MAExBX,cAACY,IAAW,CACRV,KAAK,OACLI,QAASA,IAAMnB,EAAS,CAAEQ,OAC1BS,KAAMJ,cAACa,IAAe,IACtBC,YAAY,0BAwGjBC,UAjGSA,KACpB,MAAM3B,EAAW4B,cACXC,EAAkBC,YAAW,uBAE5BC,EAAeC,GAAoBC,oBAAS,IAC5CC,EAAkBC,GAAuBF,sBACzCG,EAAcC,GAAmBJ,oBAAS,GAmBjD,OACIxB,eAAA6B,IAAQC,QAAO,CAACC,MAAO,CAAEC,OAAQ,OAAQC,SAAU,OAAQC,QAAS,QAAShC,SAAA,CACzEC,cAACgC,IAAI,CACDC,OAAO,qBACPC,oBAAqB,CACjBhC,KAAM,SACNiC,MAAO,CACHxC,GAAI,IAGZ6B,aAAcA,EACdxC,QAASA,EAAQ,CAAEE,OA5BfU,IACZ2B,EAAoB3B,GACpBwB,GAAiB,IA0BkBjC,SAvBtBiD,UAAmB,IAAZ,GAAEzC,GAAI0C,QACpBpB,EAAgBqB,OAAO3C,GACxB4C,KAAK,KACFC,IAAQC,QAAQ,uBAChBhB,GAAiBD,KAEpBkB,MAAOC,GACJH,IAAQG,MAAM,qCAA2C,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,YAgBtBxD,aACrCyD,QAAS,CAAC,EACVC,MACI9C,cAAA,OAAAD,SACIC,cAAC+C,IAAa,CACV7C,KAAK,UACLE,KAAMJ,cAACgD,IAAa,IACpB1C,QAASA,IAAMc,GAAiB,GAAMrB,SACzC,gBAOToB,GAEAnB,cAAAiD,IAAA,CACI1D,MAAK,GAAA2D,OAAK5B,EAAmB,SAAW,QAAO,aAC/C6B,UAAU,QACVC,QAASjC,EACTkC,QAASA,KACLjC,GAAiB,GACjBG,KACFxB,SAEFF,eAACyD,IAAU,CACPrB,OAAO,qBACPsB,iBAAgB,GAAAL,OAAK5B,EAAmB,aAAe,SACvDkC,cAAelC,EACf3B,GAAoB,OAAhB2B,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3B,GACtB8D,SAAUA,KACNrC,GAAiB,GACjBG,IACAE,GAAiBD,IACnBzB,SAAA,CAEFC,cAAA0D,IAAA,CACIxD,KAAK,SACLQ,KAAK,OACLiD,QAAQ,WAEZ3D,cAAA0D,IAAA,CACIE,KAAM,EACNC,KAAK,QACLnD,KAAK,OACLoD,MAAM,SACNC,YAAa,CACT,CACIC,UAAU,EACVpB,QAAQ,kC","file":"static/js/67.9f194dd1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Drawer, Input, Layout, message } from 'antd';\nimport { Grid } from '../../components/com';\nimport { RoundedButton } from '../../components/com/grid/Styles';\nimport { AiOutlineEdit, AiOutlinePlus, AiOutlineDelete, AiOutlineEye } from 'react-icons/ai';\nimport AsyncButton from '../../components/asyncButton';\nimport { getService } from '../../services';\nimport { SimpleForm } from '../../components/com/form/';\nimport { useNavigate } from 'react-router-dom';\n\nconst columns = ({ onEdit, onRemove, navigate }) => [\n    {\n        dataIndex: \"id\",\n        key: \"id\",\n        title: \"Id\",\n        sorter: true,\n        width: 120\n    },\n    {\n        dataIndex: \"name\",\n        key: \"name\",\n        title: \"Nombre\",\n        sorter: true,\n    },\n    {\n        title: \"Acciones\",\n        dataIndex: 'id',\n        key: 'actions',\n        render: (id, record) =>\n            <>\n                <Button\n                    type='text'\n                    shape='circle'\n                    icon={<AiOutlineEye />}\n                    onClick={() => navigate(\n                        '/dashboard/management/global-templates/details',\n                        {\n                            state: {\n                                template_id: id,\n                                template_name: record?.name,\n                            }\n                        })}\n                />\n                <Button\n                    type=\"text\"\n                    onClick={() => onEdit(record)}\n                    icon={<AiOutlineEdit />}\n                />\n                <AsyncButton\n                    type=\"link\"\n                    onClick={() => onRemove({ id })}\n                    icon={<AiOutlineDelete />}\n                    confirmText=\"Desea eliminar?\"\n                >\n                </AsyncButton>\n            </>\n    }\n];\n\nconst GlobalTemplates = () => {\n    const navigate = useNavigate();\n    const templateService = getService('discount-templates');\n\n    const [drawerVisible, setDrawerVisible] = useState(false);\n    const [selectedTemplate, setSelectedTemplate] = useState();\n    const [updateSource, setUpdateSource] = useState(false);\n\n    const onEdit = (record) => {\n        setSelectedTemplate(record);\n        setDrawerVisible(true);\n    };\n\n    const onRemove = async ({ id }) => {\n        await templateService.remove(id)\n            .then(() => {\n                message.success(\"Platilla eliminada!\");\n                setUpdateSource(!updateSource);\n            })\n            .catch((error) =>\n                message.error('No se pudo eliminar la Platilla! ' + error?.message)\n            )\n    };\n\n\n    return (\n        <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n            <Grid\n                source='discount-templates'\n                filterDefaultValues={{\n                    type: 'global',\n                    $sort: {\n                        id: 1\n                    }\n                }}\n                updateSource={updateSource}\n                columns={columns({ onEdit, onRemove, navigate })}\n                actions={{}}\n                extra={\n                    <div>\n                        <RoundedButton\n                            type=\"primary\"\n                            icon={<AiOutlinePlus />}\n                            onClick={() => setDrawerVisible(true)}\n                        >\n                            Agregar\n                        </RoundedButton>\n                    </div>\n                }\n            />\n            {\n                drawerVisible\n                &&\n                <Drawer\n                    title={`${selectedTemplate ? 'Editar' : 'Crear'} Platilla`}\n                    placement=\"right\"\n                    visible={drawerVisible}\n                    onClose={() => {\n                        setDrawerVisible(false);\n                        setSelectedTemplate();\n                    }}\n                >\n                    <SimpleForm\n                        source='discount-templates'\n                        textAcceptButton={`${selectedTemplate ? 'Actualizar' : 'Crear'}`}\n                        initialValues={selectedTemplate}\n                        id={selectedTemplate?.id}\n                        onSubmit={() => {\n                            setDrawerVisible(false);\n                            setSelectedTemplate();\n                            setUpdateSource(!updateSource);\n                        }}\n                    >\n                        <Input\n                            type='hidden'\n                            name='type'\n                            initial='global'\n                        />\n                        <Input\n                            flex={1}\n                            size='large'\n                            name='name'\n                            label='Nombre'\n                            validations={[\n                                {\n                                    required: true,\n                                    message: `Nombre es requerido`\n                                }\n                            ]}\n                        />\n                    </SimpleForm>\n                </Drawer>\n            }\n        </Layout.Content>\n    );\n}\n\nexport default GlobalTemplates;"],"sourceRoot":""}