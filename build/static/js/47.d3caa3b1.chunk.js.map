{"version":3,"sources":["views/reservationsOnDemand/Reservations.jsx","views/reservationsOnDemand/BlockEstablishments.jsx","views/reservationsOnDemand/index.jsx","components/Styles.js"],"names":["RangePicker","_DatePicker","STATUS","id","name","color","columns","_ref","onEdit","key","dataIndex","title","sorter","width","render","meta_user_first_name","record","meta_user_last_name","value","moment","utc","format","status","_","find","_ref2","_jsx","_Tag","children","_Button","type","onClick","icon","AiOutlineEdit","ReservationsOnDemand","form","_Form","useForm","statusValue","useWatch","idValue","drawerVisible","setDrawerVisible","useState","updateSource","setUpdateSource","selectedDate","setSelectedDate","selectedReservation","setSelectedReservation","_jsxs","_Fragment","Grid","source","searchField","searchText","search","searchById","filters","SelectField","alwaysOn","label","placeholder","allowEmpty","choices","size","style","_objectSpread","reservation_start_hour","reservation_date","filterDefaultValues","$sort","$and","$lte","$gte","extra","RoundedButton","AiOutlinePlus","resetFields","actions","locale","onChange","rangeDates","map","date","err","_message","error","message","handleChange","_Drawer","concat","placement","visible","onClose","SimpleForm","textAcceptButton","onSubmit","async","data","reservationService","getService","patch","then","success","catch","rest","_objectWithoutProperties","_excluded","create","initialValues","_Input","_InputNumber","flex","validations","required","disabled","_TimePicker","_Select","_ref3","index","Option","TextArea","autoSize","onRemove","AsyncButton","AiOutlineDelete","confirmText","BlockEstablishments","reservationsOnDemandBlockListService","remove","ReservationsOnDemandManager","_Layout","Content","height","overflow","padding","TabsStyled","defaultActiveKey","_Tabs","TabPane","tab","Reservations","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Box","_Row","_templateObject4","_templateObject5"],"mappings":"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","file":"static/js/47.d3caa3b1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, DatePicker, Drawer, Input, InputNumber, Layout, message, Select, Tag, TimePicker, Form } from \"antd\";\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport { Grid } from '../../components/com';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { SimpleForm } from '../../components/com/form/';\nimport { AiOutlineEdit, AiOutlinePlus } from 'react-icons/ai';\nimport { RoundedButton } from '../../components/com/grid/Styles';\nimport SelectField from \"../../components/com/form/SelectField\";\nimport { getService } from '../../services';\n\nconst { RangePicker } = DatePicker;\n\n\nconst STATUS = [\n    {\n        id: 'approved',\n        name: 'Aprobada',\n        color: 'green'\n    },\n    {\n        id: 'canceled_by_user',\n        name: 'Cancelada por el usuario',\n        color: 'red'\n    },\n    {\n        id: 'in_progress',\n        name: 'En progreso',\n        color: 'blue'\n    },\n    {\n        id: 'rejected',\n        name: 'Rechazada',\n        color: 'red'\n    },\n    {\n        id: 'requested',\n        name: 'Solicitada',\n        color: 'purple'\n    },\n]\n\nconst columns = ({ onEdit }) => [\n    {\n        key: \"id\",\n        dataIndex: \"id\",\n        title: \"Id\",\n        sorter: true,\n        width: \"70px\",\n    },\n    {\n        key: \"user_id\",\n        dataIndex: \"user_id\",\n        title: \"User Id\",\n        sorter: true,\n        width: \"90px\",\n    },\n    {\n        key: \"meta_user_first_name\",\n        dataIndex: \"meta_user_first_name\",\n        title: \"Usuario\",\n        sorter: true,\n        width: \"150px\",\n        render: (meta_user_first_name, record) => meta_user_first_name + ' ' + record.meta_user_last_name\n    },\n    {\n        key: \"meta_user_phone\",\n        dataIndex: \"meta_user_phone\",\n        title: \"Teléfono\",\n        sorter: true,\n        width: \"100px\",\n    },\n    {\n        key: \"meta_user_email\",\n        dataIndex: \"meta_user_email\",\n        title: \"Correo\",\n        sorter: true,\n        width: \"150px\",\n    },\n    {\n        key: \"restaurant_name\",\n        dataIndex: \"restaurant_name\",\n        title: \"Restaurante\",\n        sorter: true,\n        width: \"150px\",\n    },\n    {\n        key: \"restaurant_address\",\n        dataIndex: \"restaurant_address\",\n        title: \"Dirección y ciudad\",\n        sorter: true,\n        width: \"200px\",\n    },\n    // {\n    //     key: \"restaurant_city_name\",\n    //     dataIndex: \"restaurant_city_name\",\n    //     title: \"Ciudad\",\n    //     sorter: true,\n    //     render: (value) => _.capitalize(value)\n    // },\n    {\n        key: \"reservation_date\",\n        dataIndex: \"reservation_date\",\n        title: \"Fecha\",\n        sorter: true,\n        render: (value) => moment(value).utc().format('DD-MM-YYYY'),\n        width: \"100px\",\n    },\n    {\n        key: \"reservation_start_hour\",\n        dataIndex: \"reservation_start_hour\",\n        title: \"Hora\",\n        sorter: true,\n        width: \"100px\",\n        render: (value) => moment(value, 'HH:mm:ss').format('h:mm a')\n    },\n    {\n        key: \"reservation_persons\",\n        dataIndex: \"reservation_persons\",\n        title: \"Personas\",\n        width: \"90px\",\n        sorter: true,\n    },\n    {\n        key: \"special_occasion\",\n        dataIndex: \"special_occasion\",\n        title: \"Ocasión\",\n        width: \"150px\",\n    },\n    {\n        key: \"status\",\n        dataIndex: \"status\",\n        title: \"Estado\",\n        sorter: true,\n        width: \"180px\",\n        render: (value) => {\n            const status = _.find(STATUS, ({ id }) => id === value) || value\n            return <Tag color={status?.color || 'default'} >\n                {status?.name || status}\n            </Tag>\n        }\n    },\n    {\n        title: \"Acciones\",\n        dataIndex: 'id',\n        key: 'actions',\n        width: \"100px\",\n        render: (id, record) =>\n            <Button\n                type=\"text\"\n                onClick={() => onEdit(record)}\n                icon={<AiOutlineEdit />}\n            />\n    }\n\n]\n\nconst ReservationsOnDemand = () => {\n\n    const [form] = Form.useForm();\n    const statusValue = Form.useWatch('status', form);\n    const idValue = Form.useWatch('id', form);\n\n    const [drawerVisible, setDrawerVisible] = useState(false);\n    const [updateSource, setUpdateSource] = useState(false);\n    const [selectedDate, setSelectedDate] = useState([]);\n    const [selectedReservation, setSelectedReservation] = useState();\n\n\n    const handleChange = (rangeDates) => {\n        try {\n            setSelectedDate(_.map(rangeDates, (date) => date.format(\"YYYY-MM-DD\")));\n        } catch (err) {\n            message.error(err.message);\n        }\n    };\n\n    const onEdit = (record) => {\n        setSelectedReservation(\n            {\n                ...record,\n                reservation_start_hour: record.reservation_start_hour &&  moment(record.reservation_start_hour, 'HH:mm:ss'),\n                reservation_date: record.reservation_date &&  moment(record.reservation_date).utc()\n            }\n        )\n        setDrawerVisible(true);\n    };\n\n    const handleSubmit = async (err, data) => {\n        if (err) return message.error(err);\n\n        if (data.reservation_start_hour)\n            data.reservation_start_hour = moment(data.reservation_start_hour).format('HH:mm:ss');\n        if (data.reservation_date)\n            data.reservation_date = moment(data.reservation_date).format();\n        if (!data.status)\n            data.status = statusValue.status;\n\n        const reservationService = getService('reservation-on-demand');\n\n        if (idValue) {\n            const { status, reservation_date, reservation_start_hour } = data;\n            await reservationService.patch(idValue, { status, reservation_date, reservation_start_hour })\n                .then(() => {\n                    message.success(\"Reserva actualizada!\");\n                    setSelectedReservation();\n                    form.resetFields();\n                    setDrawerVisible(false);\n                    setUpdateSource(!updateSource);\n                })\n                .catch(err => message.error(err.message));\n        } else {\n            const { id, ...rest } = data;\n            await reservationService.create({ ...rest })\n                .then(() => {\n                    message.success(\"Reserva creada correctamente!\");\n                    setSelectedReservation();\n                    form.resetFields();\n                    setDrawerVisible(false);\n                    setUpdateSource(!updateSource);\n                })\n                .catch(err => message.error(err.message));\n        }\n    };\n\n    return (\n        <>\n            <Grid\n                source=\"reservation-on-demand\"\n                updateSource={updateSource}\n                searchField=\"q\"\n                searchText=\"Usuario, dirección... \"\n                search={true}\n                searchById={true}\n                filters={\n                    <>\n                        <SelectField\n                            alwaysOn\n                            source=\"status\"\n                            name=\"status\"\n                            label=\"Estado\"\n                            placeholder=\"Estado\"\n                            allowEmpty\n                            choices={STATUS}\n                            size=\"medium\"\n                            style={{ width: '15rem' }}\n                        />\n                    </>\n                }\n                columns={columns({ onEdit })}\n                filterDefaultValues={{\n                    $sort: {\n                        id: -1\n                    },\n                    $and: [\n                        { reservation_date: { $lte: selectedDate[1] } },\n                        { reservation_date: { $gte: selectedDate[0] } },\n                    ],\n                }}\n                extra={\n                    <div>\n                        <RoundedButton\n                            type=\"primary\"\n                            icon={<AiOutlinePlus />}\n                            onClick={() => {\n                                setDrawerVisible(true);\n                                setSelectedReservation();\n                                form.resetFields();\n                            }}\n                        >\n                            Agregar\n                        </RoundedButton>\n                    </div>\n                }\n                actions={{}}\n                title={\n                    <>\n                        <RangePicker\n                            locale={locale}\n                            onChange={(rangeDates) => handleChange(rangeDates)}\n                        />\n                    </>\n                }\n            />\n            {\n                drawerVisible && (\n                    <Drawer\n                        size='large'\n                        title={`${idValue ? 'Editar' : 'Crear'} Reserva`}\n                        placement=\"right\"\n                        visible={drawerVisible}\n                        onClose={() => {\n                            setSelectedReservation();\n                            form.resetFields();\n                            setDrawerVisible(false);\n                        }}\n                    >\n                        <SimpleForm\n                            form={form}\n                            textAcceptButton={`${idValue ? 'Actualizar' : 'Crear'}`}\n                            onSubmit={handleSubmit}\n                            initialValues={selectedReservation}\n                        >\n                            <Input\n                                type='hidden'\n                                name='id'\n                            />\n                            <InputNumber\n                                flex={0.5}\n                                size='large'\n                                label=\"User Id\"\n                                name=\"user_id\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `User Id es requerido`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <InputNumber\n                                flex={0.5}\n                                size='large'\n                                label=\"Teléfono\"\n                                name=\"meta_user_phone\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Teléfono es requerido`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <Input\n                                flex={1}\n                                size='large'\n                                label=\"Correo\"\n                                name=\"meta_user_email\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Correo es requerido`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <Input\n                                flex={1}\n                                size='large'\n                                label=\"Restaurante\"\n                                name=\"restaurant_name\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Restaurante es requerido`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <Input\n                                flex={1}\n                                size='large'\n                                label=\"Dirección\"\n                                name=\"restaurant_address\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Dirección es requerida`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <Input\n                                flex={0.5}\n                                size='large'\n                                label=\"Ciudad\"\n                                name=\"restaurant_city_name\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Ciudad es requerida`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <InputNumber\n                                flex={0.5}\n                                size='large'\n                                label=\"Teléfono\"\n                                name=\"meta_user_phone\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Teléfono es requerido`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <InputNumber\n                                flex={0.5}\n                                size='large'\n                                label=\"Personas\"\n                                name=\"reservation_persons\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Personas es requerida`\n                                    }\n                                ]}\n                                disabled={!!idValue}\n                            />\n                            <Input\n                                flex={0.5}\n                                label=\"Ocasión\"\n                                size='large'\n                                name=\"special_occasion\"\n                                disabled={!!idValue}\n                            />\n                            <DatePicker\n                                flex={0.5}\n                                size='large'\n                                label=\"Fecha\"\n                                name=\"reservation_date\"\n                                format=\"DD-MM-YYYY\"\n                                locale={locale}\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Fecha es requerida`\n                                    }\n                                ]}\n                            />\n                            <TimePicker\n                                flex={0.5}\n                                size='large'\n                                label=\"Hora\"\n                                name=\"reservation_start_hour\"\n                                format=\"h:mm a\"\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: `Hora es requerida`\n                                    }\n                                ]}\n                            />\n                            <Select\n                                flex={1}\n                                name='status'\n                                label=\"Estado\"\n                                size='large'\n                                validations={[\n                                    {\n                                        required: true,\n                                        message: 'Estado es requerido',\n                                    },\n                                ]}\n                            >\n                                {\n                                    _.map(STATUS, ({ id, name }, index) =>\n                                        <Select.Option\n                                            key={index}\n                                            value={id}\n                                        >\n                                            {name}\n                                        </Select.Option>\n                                    )\n                                }\n                            </Select>\n                            {\n                                statusValue === STATUS[3].id &&\n                                <Input.TextArea\n                                    flex={1}\n                                    name='rejected_reason'\n                                    label='Razón de rechazo'\n                                    autoSize\n                                    validations={[\n                                        {\n                                            required: true,\n                                            message: 'Razón es requerida',\n                                        },\n                                    ]}\n                                />\n                            }\n\n                        </SimpleForm>\n                    </Drawer>\n                )\n\n            }\n        </>\n    );\n}\n\nexport default ReservationsOnDemand;","import { useState } from \"react\";\nimport { Grid } from \"../../components/com\";\nimport { RoundedButton } from \"../../components/com/grid/Styles\";\nimport { AiOutlineDelete, AiOutlineEdit, AiOutlinePlus } from 'react-icons/ai';\nimport { Button, Drawer, Input, message } from \"antd\";\nimport { SimpleForm } from \"../../components/com/form/\";\nimport AsyncButton from \"../../components/asyncButton\";\nimport { getService } from \"../../services\";\n\n\n\nconst columns = ({ onEdit, onRemove }) => [\n    {\n        key: \"id\",\n        dataIndex: \"id\",\n        title: \"Id\",\n        sorter: true,\n    },\n    {\n        key: \"name\",\n        dataIndex: \"name\",\n        title: \"Nombre\",\n        sorter: true,\n    },\n    {\n        title: \"Acciones\",\n        dataIndex: 'id',\n        key: 'actions',\n        render: (id, record) =>\n            <>\n                <Button\n                    type=\"text\"\n                    onClick={() => onEdit(record)}\n                    icon={<AiOutlineEdit />}\n                />\n\n                <AsyncButton\n                    type=\"link\"\n                    onClick={() => onRemove({ id })}\n                    icon={<AiOutlineDelete />}\n                    confirmText=\"Desea eliminar?\"\n                >\n                </AsyncButton>\n            </>\n    }\n\n];\n\nconst BlockEstablishments = () => {\n\n    const [drawerVisible, setDrawerVisible] = useState(false);\n    const [selectedReservation, setSelectedReservation] = useState(false);\n    const [updateSource, setUpdateSource] = useState(false);\n\n    const onEdit = (record) => {\n        setSelectedReservation({\n            ...record,\n        });\n        setDrawerVisible(true);\n    };\n\n    const onRemove = async ({ id }) => {\n        const reservationsOnDemandBlockListService = getService('reservation-on-demand-block-list-establishments');\n        await reservationsOnDemandBlockListService.remove(id)\n            .then(() => {\n                message.success(\"Establecimiento eliminado de la lista!\");\n                setUpdateSource(!updateSource);\n            })\n            .catch((error) =>\n                message.error('No se pudo eliminar el establecimiento! ' + error?.message)\n            )\n    };\n\n    return (\n        <>\n            <Grid\n                source=\"reservation-on-demand-block-list-establishments\"\n                updateSource={updateSource}\n                columns={columns({ onEdit, onRemove })}\n                filterDefaultValues={{\n                    $sort: {\n                        id: -1\n                    },\n                }}\n                extra={\n                    <div>\n                        <RoundedButton\n                            type=\"primary\"\n                            icon={<AiOutlinePlus />}\n                            onClick={() => setDrawerVisible(true)}\n                        >\n                            Agregar\n                        </RoundedButton>\n                    </div>\n                }\n                actions={{}}\n            />\n            {\n                drawerVisible\n                &&\n                <Drawer\n                    title={`${selectedReservation ? 'Editar' : 'Crear'} Reserva`}\n                    placement=\"right\"\n                    visible={drawerVisible}\n                    onClose={() => {\n                        setDrawerVisible(false);\n                        setSelectedReservation();\n                    }}\n                >\n                    <SimpleForm\n                        source=\"reservation-on-demand-block-list-establishments\"\n                        textAcceptButton={`${selectedReservation ? 'Actualizar' : 'Crear'}`}\n                        initialValues={selectedReservation}\n                        id={selectedReservation?.id}\n                        onSubmit={() => {\n                            setDrawerVisible(false);\n                            setSelectedReservation();\n                            setUpdateSource(!updateSource);\n                        }}\n                    >\n                        <Input\n                            flex={1}\n                            label=\"Nombre establecimiento\"\n                            size='large'\n                            name=\"name\"\n                            validations={[\n                                {\n                                    required: true,\n                                    message: `Nombre es requerido`\n                                }\n                            ]}\n                        />\n\n                    </SimpleForm>\n                </Drawer>\n            }\n        </>\n    )\n}\n\nexport default BlockEstablishments;","import React from 'react';\nimport { Layout, Tabs } from 'antd';\nimport { TabsStyled } from '../../components/Styles';\n\nimport Reservations from './Reservations';\nimport BlockEstablishments from './BlockEstablishments';\n\nconst ReservationsOnDemandManager = () => {\n\n    return (\n        <Layout.Content style={{ height: '100%', overflow: 'auto', padding: '2rem' }}>\n            <TabsStyled defaultActiveKey=\"1\">\n                <Tabs.TabPane tab=\"Apparta donde quieras\" key=\"1\">\n                    <Reservations />\n                </Tabs.TabPane>\n                <Tabs.TabPane tab=\"Establecimientos bloqueados\" key=\"2\">\n                    <BlockEstablishments />\n                </Tabs.TabPane>\n            </TabsStyled>\n        </Layout.Content>\n    );\n}\n\nexport default ReservationsOnDemandManager;","import { Row, Tabs } from 'antd';\nimport styled from 'styled-components';\n\nexport const HeadLine = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: baseline;\n  flex-wrap: wrap;\n\n  width:100%!important;\n\n  background-color:var(--gray-dark-1)!important;\n  color:#fff!important;\n\n  & .ant-checkbox-wrapper{\n    margin:0px 10px;\n  }\n  & h2{\n    color: #fff!important;\n    text-transform: uppercase!important;\n    padding: 4px 10px!important;\n    font-size: 16px!important;\n    vertical-align: middle!important;\n    margin-bottom: 0px!important;\n  }\n`;\nexport const AvatarWrapper = styled.div`\n\n    position:relative;\n   \n    display: flex;\n    justify-content: start;\n    align-items: center;\n\n    & .container{\n      width: 34px;\n      position:relative;\n    }\n    & .container:hover .ant-btn{\n      display:inline-block;\n    }\n    & .ant-btn,.ant-btn:hover{\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 999;\n      height: 34px!important;\n      display: none;\n      width: 34px!important;\n      background: #0010214f!important;\n      color: #FFF!important;\n      font-weight: bold;\n      display:none;\n    }\n`;\n\nexport const Tools = styled.div`\n    display:flex;\n    justify-content: space-between;\n`;\nexport const Box = styled(Row)`\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n  border-radius:1rem;\n  background: #fff ;\n  padding: 2rem;\n`;\nexport const TabsStyled = styled(Tabs)`\n    & .ant-tabs-nav{\n        background-color:white;\n        border-radius:1rem;\n        box-shadow: rgb(0 0 0 / 10%) 0px 4px 12px;\n        padding:0 1rem;\n    }\n`;\n"],"sourceRoot":""}